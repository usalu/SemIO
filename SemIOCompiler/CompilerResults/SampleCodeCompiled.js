//------------------------------------------------------------------------------
/// <autogenerated>
///     This code was generated by a tool.
///     Runtime Version: 4.0.30319.42000
///
///     Changes to this file may cause incorrect behavior and will be lost if 
///     the code is regenerated.
/// </autogenerated>
//------------------------------------------------------------------------------

//@cc_on
//@set @debug(off)

import System;

package AbstractionLevels.MasterplanRepository.ParameterTypes
{
    
    public System.ComponentModel.Description("Defines the designated use of a parcel") 
    enum Use
    {
        
        Industrial = 0,
        
        Residential = 1,
        
        Urban = 2,
        
        Mixed = 3,
    }
    
    public System.ComponentModel.Description("Describes an emotion regarding a building") Flags() 
    enum Emotions
    {
        
        Ecstasy = 1,
        
        Admiration = 2,
        
        Terror = 4,
        
        Amazement = 8,
        
        Grief = 16,
        
        Loathing = 32,
        
        Rage = 64,
        
        Vigilance = 128,
    }
}
//@cc_on
//@set @debug(off)

import System;
import AbstractionLevels.MasterplanRepository.ParameterTypes;
import SemIOLibrary.Parameters;
import SemIOLibrary.Parameters.GeometryParameters;
import SemIOLibrary.Parameters.GeometryParameters.Surfaces;
import SemIOLibrary.Parameters.GeometryParameters.Solids;
import SemIOLibrary.Parameters.GeometryParameters.Points;
import SemIOLibrary.Parameters.GeometryParameters.Curves;
import SemIOLibrary.Parameters.BaseParameters;
import SemIOLibrary.Parameters.BaseParameters.Numbers;

package AbstractionLevels.MasterplanRepository.ThingTypes
{
    
    public System.ComponentModel.Description("Describes a volume with a use") 
    class BuildingVolume
    {
        
        private var _parcel : ClosedCurve;
        
        public final System.ComponentModel.Description("") 
        function get Parcel() : ClosedCurve
        {
            return this._parcel;
        }
        public final function set Parcel(value : ClosedCurve)
        {
            this._parcel = value;
        }
        
        private var _use : Use;
        
        public final System.ComponentModel.Description("") 
        function get Use() : Use
        {
            return this._use;
        }
        public final function set Use(value : Use)
        {
            this._use = value;
        }
        
        private var _height : Number;
        
        public final System.ComponentModel.Description("") 
        function get Height() : Number
        {
            return this._height;
        }
        public final function set Height(value : Number)
        {
            this._height = value;
        }
        
        private var _reactions : Emotions;
        
        public final System.ComponentModel.Description("") 
        function get Reactions() : Emotions
        {
            return this._reactions;
        }
        public final function set Reactions(value : Emotions)
        {
            this._reactions = value;
        }
    }
    
    public System.ComponentModel.Description("Describes adjacent building volumes") 
    class BuildingBlock
    {
        
        private var _buildingVolumes : BuildingVolume;
        
        public final System.ComponentModel.Description("") 
        function get BuildingVolumes() : BuildingVolume
        {
            return this._buildingVolumes;
        }
        public final function set BuildingVolumes(value : BuildingVolume)
        {
            this._buildingVolumes = value;
        }
    }
}
//@cc_on
//@set @debug(off)

import System;
import AbstractionLevels.MasterplanRepository.ThingTypes;

package AbstractionLevels.MasterplanRepository
{
    
    public System.ComponentModel.Description("Massing studies and infrastructure including public transportation (Simillar to 1" + 
"to500)") 
    class Masterplan
    {
        
        private var _buildingVolumeCollection : System.Collections.Generic.List`1;
        
        public final System.ComponentModel.Description("Describes a volume with a use") 
        function get BuildingVolumeCollection() : System.Collections.Generic.List`1
        {
            return this._buildingVolumeCollection;
        }
        public final function set BuildingVolumeCollection(value : System.Collections.Generic.List`1)
        {
        }
        
        private var _buildingBlockCollection : System.Collections.Generic.List`1;
        
        public final System.ComponentModel.Description("Describes adjacent building volumes") 
        function get BuildingBlockCollection() : System.Collections.Generic.List`1
        {
            return this._buildingBlockCollection;
        }
        public final function set BuildingBlockCollection(value : System.Collections.Generic.List`1)
        {
        }
    }
}
//@cc_on
//@set @debug(off)

import System;

package AbstractionLevels.ApartmentplanRepository.ParameterTypes
{
    
    public System.ComponentModel.Description("Describing how an aprartment can be reached with") 
    enum Accessability
    {
        
        Walking = 0,
        
        Rollator = 1,
        
        Wheelchair = 2,
    }
}
//@cc_on
//@set @debug(off)

import System;
import AbstractionLevels.ApartmentplanRepository.ParameterTypes;
import SemIOLibrary.Parameters;
import SemIOLibrary.Parameters.GeometryParameters;
import SemIOLibrary.Parameters.GeometryParameters.Surfaces;
import SemIOLibrary.Parameters.GeometryParameters.Solids;
import SemIOLibrary.Parameters.GeometryParameters.Points;
import SemIOLibrary.Parameters.GeometryParameters.Curves;
import SemIOLibrary.Parameters.BaseParameters;
import SemIOLibrary.Parameters.BaseParameters.Numbers;

package AbstractionLevels.ApartmentplanRepository.ThingTypes
{
    
    public System.ComponentModel.Description("Most general information about an apartment") 
    class Apartment
    {
        
        private var _boundary : ClosedCurve;
        
        public final System.ComponentModel.Description("Only one storey footpring of apartment.") 
        function get Boundary() : ClosedCurve
        {
            return this._boundary;
        }
        public final function set Boundary(value : ClosedCurve)
        {
            this._boundary = value;
        }
        
        private var _entrance : Point;
        
        public final System.ComponentModel.Description("") 
        function get Entrance() : Point
        {
            return this._entrance;
        }
        public final function set Entrance(value : Point)
        {
            this._entrance = value;
        }
        
        private var _countPeople : Integer;
        
        public final System.ComponentModel.Description("") 
        function get CountPeople() : Integer
        {
            return this._countPeople;
        }
        public final function set CountPeople(value : Integer)
        {
            this._countPeople = value;
        }
        
        private var _accessability : Accessability;
        
        public final System.ComponentModel.Description("") 
        function get Accessability() : Accessability
        {
            return this._accessability;
        }
        public final function set Accessability(value : Accessability)
        {
            this._accessability = value;
        }
    }
    
    public System.ComponentModel.Description("General inforamtion about how the building is accessed") 
    class Circulation
    {
        
        private var _boundary : ClosedCurve;
        
        public final System.ComponentModel.Description("") 
        function get Boundary() : ClosedCurve
        {
            return this._boundary;
        }
        public final function set Boundary(value : ClosedCurve)
        {
            this._boundary = value;
        }
        
        private var _mainEntrances : Point;
        
        public final System.ComponentModel.Description("") 
        function get MainEntrances() : Point
        {
            return this._mainEntrances;
        }
        public final function set MainEntrances(value : Point)
        {
            this._mainEntrances = value;
        }
        
        private var _staircase : ClosedCurve;
        
        public final System.ComponentModel.Description("") 
        function get Staircase() : ClosedCurve
        {
            return this._staircase;
        }
        public final function set Staircase(value : ClosedCurve)
        {
            this._staircase = value;
        }
    }
}
//@cc_on
//@set @debug(off)

import System;
import AbstractionLevels.ApartmentplanRepository.ThingTypes;
import AbstractionLevels.MasterplanRepository;

package AbstractionLevels.ApartmentplanRepository
{
    
    public System.ComponentModel.Description("General information about layout and accessability of the apartment equivalent to" + 
" 1to200 in analogue scale") 
    class Apartmentplan extends Masterplan
    {
        
        private var _apartmentCollection : System.Collections.Generic.List`1;
        
        public final System.ComponentModel.Description("Most general information about an apartment") 
        function get ApartmentCollection() : System.Collections.Generic.List`1
        {
            return this._apartmentCollection;
        }
        public final function set ApartmentCollection(value : System.Collections.Generic.List`1)
        {
        }
        
        private var _circulationCollection : System.Collections.Generic.List`1;
        
        public final System.ComponentModel.Description("General inforamtion about how the building is accessed") 
        function get CirculationCollection() : System.Collections.Generic.List`1
        {
            return this._circulationCollection;
        }
        public final function set CirculationCollection(value : System.Collections.Generic.List`1)
        {
        }
    }
}
//@cc_on
//@set @debug(off)

import System;

package AbstractionLevels.RoomplanRepository.ParameterTypes
{
    
    public System.ComponentModel.Description("Direction of door wing") 
    enum DoorDirection
    {
        
        Inside = 0,
        
        Outside = 1,
    }
    
    public System.ComponentModel.Description("Activities that happen in a room") Flags() 
    enum Activities
    {
        
        Sleeping = 1,
        
        Relaxing = 2,
        
        Working = 4,
        
        Cooking = 8,
        
        Showering = 16,
        
        Bathing = 32,
    }
    
    public System.ComponentModel.Description("Describing how much noise will be emmited from the room") 
    enum NoiseLevel
    {
        
        VeryQuiet = 0,
        
        Quiet = 1,
        
        ConversationLevel = 2,
        
        Loud = 3,
    }
}
//@cc_on
//@set @debug(off)

import System;
import AbstractionLevels.RoomplanRepository.ParameterTypes;
import SemIOLibrary.Parameters;
import SemIOLibrary.Parameters.GeometryParameters;
import SemIOLibrary.Parameters.GeometryParameters.Surfaces;
import SemIOLibrary.Parameters.GeometryParameters.Solids;
import SemIOLibrary.Parameters.GeometryParameters.Points;
import SemIOLibrary.Parameters.GeometryParameters.Curves;
import SemIOLibrary.Parameters.BaseParameters;
import SemIOLibrary.Parameters.BaseParameters.Numbers;

package AbstractionLevels.RoomplanRepository.ThingTypes
{
    
    public System.ComponentModel.Description("Generic base class for openings") 
    class Opening
    {
        
        private var _center : Point;
        
        public final System.ComponentModel.Description("") 
        function get Center() : Point
        {
            return this._center;
        }
        public final function set Center(value : Point)
        {
            this._center = value;
        }
        
        private var _width : Number;
        
        public final System.ComponentModel.Description("") 
        function get Width() : Number
        {
            return this._width;
        }
        public final function set Width(value : Number)
        {
            this._width = value;
        }
        
        private var _height : Number;
        
        public final System.ComponentModel.Description("") 
        function get Height() : Number
        {
            return this._height;
        }
        public final function set Height(value : Number)
        {
            this._height = value;
        }
    }
    
    public System.ComponentModel.Description("Abstract window definition") 
    class Window extends Opening
    {
        
        private var _parapetHeight : Number;
        
        public final System.ComponentModel.Description("") 
        function get ParapetHeight() : Number
        {
            return this._parapetHeight;
        }
        public final function set ParapetHeight(value : Number)
        {
            this._parapetHeight = value;
        }
    }
    
    public System.ComponentModel.Description("Abstract door definition") 
    class Door extends Opening
    {
        
        private var _doorDirection : DoorDirection;
        
        public final System.ComponentModel.Description("") 
        function get DoorDirection() : DoorDirection
        {
            return this._doorDirection;
        }
        public final function set DoorDirection(value : DoorDirection)
        {
            this._doorDirection = value;
        }
    }
    
    public System.ComponentModel.Description("Abstract definition of a room with doors and windows") 
    class Room
    {
        
        private var _boundary : ClosedCurve;
        
        public final System.ComponentModel.Description("") 
        function get Boundary() : ClosedCurve
        {
            return this._boundary;
        }
        public final function set Boundary(value : ClosedCurve)
        {
            this._boundary = value;
        }
        
        private var _windows : Window;
        
        public final System.ComponentModel.Description("") 
        function get Windows() : Window
        {
            return this._windows;
        }
        public final function set Windows(value : Window)
        {
            this._windows = value;
        }
        
        private var _doors : Door;
        
        public final System.ComponentModel.Description("") 
        function get Doors() : Door
        {
            return this._doors;
        }
        public final function set Doors(value : Door)
        {
            this._doors = value;
        }
        
        private var _activities : Activities;
        
        public final System.ComponentModel.Description("") 
        function get Activities() : Activities
        {
            return this._activities;
        }
        public final function set Activities(value : Activities)
        {
            this._activities = value;
        }
    }
}
//@cc_on
//@set @debug(off)

import System;
import AbstractionLevels.RoomplanRepository.ThingTypes;
import AbstractionLevels.ApartmentplanRepository;

package AbstractionLevels.RoomplanRepository
{
    
    public System.ComponentModel.Description("Inforamtion about rooms, relations between them and openings(windows and doors). " + 
"Comparable to 1to100") 
    class Roomplan extends Apartmentplan
    {
        
        private var _openingCollection : System.Collections.Generic.List`1;
        
        public final System.ComponentModel.Description("Generic base class for openings") 
        function get OpeningCollection() : System.Collections.Generic.List`1
        {
            return this._openingCollection;
        }
        public final function set OpeningCollection(value : System.Collections.Generic.List`1)
        {
        }
        
        private var _windowCollection : System.Collections.Generic.List`1;
        
        public final System.ComponentModel.Description("Abstract window definition") 
        function get WindowCollection() : System.Collections.Generic.List`1
        {
            return this._windowCollection;
        }
        public final function set WindowCollection(value : System.Collections.Generic.List`1)
        {
        }
        
        private var _doorCollection : System.Collections.Generic.List`1;
        
        public final System.ComponentModel.Description("Abstract door definition") 
        function get DoorCollection() : System.Collections.Generic.List`1
        {
            return this._doorCollection;
        }
        public final function set DoorCollection(value : System.Collections.Generic.List`1)
        {
        }
        
        private var _roomCollection : System.Collections.Generic.List`1;
        
        public final System.ComponentModel.Description("Abstract definition of a room with doors and windows") 
        function get RoomCollection() : System.Collections.Generic.List`1
        {
            return this._roomCollection;
        }
        public final function set RoomCollection(value : System.Collections.Generic.List`1)
        {
        }
    }
}
