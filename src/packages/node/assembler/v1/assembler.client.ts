// @generated by protobuf-ts 2.8.2 with parameter server_grpc1,generate_dependencies
// @generated from protobuf file "assembler/v1/assembler.proto" (package "semio.assembler.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { AssemblerService } from "./assembler";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Design } from "../../model/v1/model";
import type { LayoutDesignRequest } from "./assembler";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * The assembler service is responsible for assembling layouts into designs.
 *
 * @generated from protobuf service semio.assembler.v1.AssemblerService
 */
export interface IAssemblerServiceClient {
    /**
     * Lay out a design from a layout and return a design.
     *
     * @generated from protobuf rpc: LayoutDesign(semio.assembler.v1.LayoutDesignRequest) returns (semio.model.v1.Design);
     */
    layoutDesign(input: LayoutDesignRequest, options?: RpcOptions): UnaryCall<LayoutDesignRequest, Design>;
}
/**
 * The assembler service is responsible for assembling layouts into designs.
 *
 * @generated from protobuf service semio.assembler.v1.AssemblerService
 */
export class AssemblerServiceClient implements IAssemblerServiceClient, ServiceInfo {
    typeName = AssemblerService.typeName;
    methods = AssemblerService.methods;
    options = AssemblerService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Lay out a design from a layout and return a design.
     *
     * @generated from protobuf rpc: LayoutDesign(semio.assembler.v1.LayoutDesignRequest) returns (semio.model.v1.Design);
     */
    layoutDesign(input: LayoutDesignRequest, options?: RpcOptions): UnaryCall<LayoutDesignRequest, Design> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LayoutDesignRequest, Design>("unary", this._transport, method, opt, input);
    }
}
