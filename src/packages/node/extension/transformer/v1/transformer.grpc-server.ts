// @generated by protobuf-ts 2.8.2 with parameter server_grpc1,generate_dependencies
// @generated from protobuf file "extension/transformer/v1/transformer.proto" (package "semio.extension.transformer.v1", syntax proto3)
// tslint:disable
import { Layout } from "../../../model/v1/model";
import { RewriteLayoutRequest } from "./transformer";
import type * as grpc from "@grpc/grpc-js";
/**
 * A service for transforming (rewriting) layouts (graphs).
 *
 * @generated from protobuf service semio.extension.transformer.v1.TransformerService
 */
export interface ITransformerService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: RewriteLayout(semio.extension.transformer.v1.RewriteLayoutRequest) returns (semio.model.v1.Layout);
     */
    rewriteLayout: grpc.handleUnaryCall<RewriteLayoutRequest, Layout>;
}
/**
 * @grpc/grpc-js definition for the protobuf service semio.extension.transformer.v1.TransformerService.
 *
 * Usage: Implement the interface ITransformerService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: ITransformerService = ...
 * server.addService(transformerServiceDefinition, service);
 * ```
 */
export const transformerServiceDefinition: grpc.ServiceDefinition<ITransformerService> = {
    rewriteLayout: {
        path: "/semio.extension.transformer.v1.TransformerService/RewriteLayout",
        originalName: "RewriteLayout",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Layout.fromBinary(bytes),
        requestDeserialize: bytes => RewriteLayoutRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Layout.toBinary(value)),
        requestSerialize: value => Buffer.from(RewriteLayoutRequest.toBinary(value))
    }
};
