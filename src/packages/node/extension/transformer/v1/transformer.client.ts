// @generated by protobuf-ts 2.8.2 with parameter server_grpc1,generate_dependencies
// @generated from protobuf file "extension/transformer/v1/transformer.proto" (package "semio.extension.transformer.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TransformerService } from "./transformer";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Layout } from "../../../model/v1/model";
import type { RewriteLayoutRequest } from "./transformer";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * A service for transforming (rewriting) layouts (graphs).
 *
 * @generated from protobuf service semio.extension.transformer.v1.TransformerService
 */
export interface ITransformerServiceClient {
    /**
     * @generated from protobuf rpc: RewriteLayout(semio.extension.transformer.v1.RewriteLayoutRequest) returns (semio.model.v1.Layout);
     */
    rewriteLayout(input: RewriteLayoutRequest, options?: RpcOptions): UnaryCall<RewriteLayoutRequest, Layout>;
}
/**
 * A service for transforming (rewriting) layouts (graphs).
 *
 * @generated from protobuf service semio.extension.transformer.v1.TransformerService
 */
export class TransformerServiceClient implements ITransformerServiceClient, ServiceInfo {
    typeName = TransformerService.typeName;
    methods = TransformerService.methods;
    options = TransformerService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: RewriteLayout(semio.extension.transformer.v1.RewriteLayoutRequest) returns (semio.model.v1.Layout);
     */
    rewriteLayout(input: RewriteLayoutRequest, options?: RpcOptions): UnaryCall<RewriteLayoutRequest, Layout> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<RewriteLayoutRequest, Layout>("unary", this._transport, method, opt, input);
    }
}
