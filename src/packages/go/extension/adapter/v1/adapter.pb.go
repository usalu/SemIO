// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: extension/adapter/v1/adapter.proto

package v1

import (
	v1 "github.com/usalu/semio/src/packages/go/model/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Adapting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformName string `protobuf:"bytes,1,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`
}

func (x *Adapting) Reset() {
	*x = Adapting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_adapter_v1_adapter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Adapting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Adapting) ProtoMessage() {}

func (x *Adapting) ProtoReflect() protoreflect.Message {
	mi := &file_extension_adapter_v1_adapter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Adapting.ProtoReflect.Descriptor instead.
func (*Adapting) Descriptor() ([]byte, []int) {
	return file_extension_adapter_v1_adapter_proto_rawDescGZIP(), []int{0}
}

func (x *Adapting) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

type AttractionPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Url of attractor.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Parameters of attractor.
	Parameters map[string]string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional bias parameters of attracted.
	Bias map[string]string `protobuf:"bytes,3,rep,name=bias,proto3" json:"bias,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional representation depending on protocol.
	//
	// Types that are assignable to Representation:
	//	*AttractionPointRequest_SimpleRepresentation
	//	*AttractionPointRequest_FullRepresentation
	Representation isAttractionPointRequest_Representation `protobuf_oneof:"representation"`
}

func (x *AttractionPointRequest) Reset() {
	*x = AttractionPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_adapter_v1_adapter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttractionPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttractionPointRequest) ProtoMessage() {}

func (x *AttractionPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extension_adapter_v1_adapter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttractionPointRequest.ProtoReflect.Descriptor instead.
func (*AttractionPointRequest) Descriptor() ([]byte, []int) {
	return file_extension_adapter_v1_adapter_proto_rawDescGZIP(), []int{1}
}

func (x *AttractionPointRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AttractionPointRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *AttractionPointRequest) GetBias() map[string]string {
	if x != nil {
		return x.Bias
	}
	return nil
}

func (m *AttractionPointRequest) GetRepresentation() isAttractionPointRequest_Representation {
	if m != nil {
		return m.Representation
	}
	return nil
}

func (x *AttractionPointRequest) GetSimpleRepresentation() *v1.Point {
	if x, ok := x.GetRepresentation().(*AttractionPointRequest_SimpleRepresentation); ok {
		return x.SimpleRepresentation
	}
	return nil
}

func (x *AttractionPointRequest) GetFullRepresentation() *v1.Representation {
	if x, ok := x.GetRepresentation().(*AttractionPointRequest_FullRepresentation); ok {
		return x.FullRepresentation
	}
	return nil
}

type isAttractionPointRequest_Representation interface {
	isAttractionPointRequest_Representation()
}

type AttractionPointRequest_SimpleRepresentation struct {
	SimpleRepresentation *v1.Point `protobuf:"bytes,4,opt,name=simple_representation,json=simpleRepresentation,proto3,oneof"`
}

type AttractionPointRequest_FullRepresentation struct {
	FullRepresentation *v1.Representation `protobuf:"bytes,5,opt,name=full_representation,json=fullRepresentation,proto3,oneof"`
}

func (*AttractionPointRequest_SimpleRepresentation) isAttractionPointRequest_Representation() {}

func (*AttractionPointRequest_FullRepresentation) isAttractionPointRequest_Representation() {}

type RepresentationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sobject *v1.Sobject `protobuf:"bytes,1,opt,name=sobject,proto3" json:"sobject,omitempty"`
	Type    string      `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Name    string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Lod     int64       `protobuf:"varint,4,opt,name=lod,proto3" json:"lod,omitempty"`
}

func (x *RepresentationRequest) Reset() {
	*x = RepresentationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_adapter_v1_adapter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepresentationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepresentationRequest) ProtoMessage() {}

func (x *RepresentationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extension_adapter_v1_adapter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepresentationRequest.ProtoReflect.Descriptor instead.
func (*RepresentationRequest) Descriptor() ([]byte, []int) {
	return file_extension_adapter_v1_adapter_proto_rawDescGZIP(), []int{2}
}

func (x *RepresentationRequest) GetSobject() *v1.Sobject {
	if x != nil {
		return x.Sobject
	}
	return nil
}

func (x *RepresentationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RepresentationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RepresentationRequest) GetLod() int64 {
	if x != nil {
		return x.Lod
	}
	return 0
}

type RepresentationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sobject *v1.Sobject `protobuf:"bytes,1,opt,name=sobject,proto3" json:"sobject,omitempty"`
	Types   []string    `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	Names   []string    `protobuf:"bytes,3,rep,name=names,proto3" json:"names,omitempty"`
	Lods    []int64     `protobuf:"varint,4,rep,packed,name=lods,proto3" json:"lods,omitempty"`
}

func (x *RepresentationsRequest) Reset() {
	*x = RepresentationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_adapter_v1_adapter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepresentationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepresentationsRequest) ProtoMessage() {}

func (x *RepresentationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extension_adapter_v1_adapter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepresentationsRequest.ProtoReflect.Descriptor instead.
func (*RepresentationsRequest) Descriptor() ([]byte, []int) {
	return file_extension_adapter_v1_adapter_proto_rawDescGZIP(), []int{3}
}

func (x *RepresentationsRequest) GetSobject() *v1.Sobject {
	if x != nil {
		return x.Sobject
	}
	return nil
}

func (x *RepresentationsRequest) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *RepresentationsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *RepresentationsRequest) GetLods() []int64 {
	if x != nil {
		return x.Lods
	}
	return nil
}

type RepresentationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Representations []*v1.Representation `protobuf:"bytes,1,rep,name=representations,proto3" json:"representations,omitempty"`
}

func (x *RepresentationsResponse) Reset() {
	*x = RepresentationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_adapter_v1_adapter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepresentationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepresentationsResponse) ProtoMessage() {}

func (x *RepresentationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extension_adapter_v1_adapter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepresentationsResponse.ProtoReflect.Descriptor instead.
func (*RepresentationsResponse) Descriptor() ([]byte, []int) {
	return file_extension_adapter_v1_adapter_proto_rawDescGZIP(), []int{4}
}

func (x *RepresentationsResponse) GetRepresentations() []*v1.Representation {
	if x != nil {
		return x.Representations
	}
	return nil
}

var File_extension_adapter_v1_adapter_proto protoreflect.FileDescriptor

var file_extension_adapter_v1_adapter_proto_rawDesc = []byte{
	0x0a, 0x22, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x14, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x08, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x04, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x62, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x50, 0x0a, 0x04, 0x62, 0x69, 0x61, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x69, 0x61, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x62, 0x69, 0x61, 0x73, 0x12, 0x4c, 0x0a, 0x15, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6d, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x14, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x13, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3d, 0x0a, 0x0f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x42, 0x69,
	0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x07, 0x73, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x6f, 0x64, 0x22, 0x8b, 0x01, 0x0a,
	0x16, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x07, 0x73, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x6f, 0x64, 0x73, 0x22, 0x63, 0x0a, 0x17, 0x52, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32,
	0xeb, 0x02, 0x0a, 0x0e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x65, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x73,
	0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x15, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x32, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xf6, 0x01,
	0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x42, 0x0c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x61,
	0x6c, 0x75, 0x2f, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x53, 0x45, 0x41, 0xaa, 0x02, 0x1a, 0x53, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x1a, 0x53, 0x65, 0x6d, 0x69, 0x6f, 0x5c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x5c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x26,
	0x53, 0x65, 0x6d, 0x69, 0x6f, 0x5c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5c,
	0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1d, 0x53, 0x65, 0x6d, 0x69, 0x6f, 0x3a, 0x3a,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_extension_adapter_v1_adapter_proto_rawDescOnce sync.Once
	file_extension_adapter_v1_adapter_proto_rawDescData = file_extension_adapter_v1_adapter_proto_rawDesc
)

func file_extension_adapter_v1_adapter_proto_rawDescGZIP() []byte {
	file_extension_adapter_v1_adapter_proto_rawDescOnce.Do(func() {
		file_extension_adapter_v1_adapter_proto_rawDescData = protoimpl.X.CompressGZIP(file_extension_adapter_v1_adapter_proto_rawDescData)
	})
	return file_extension_adapter_v1_adapter_proto_rawDescData
}

var file_extension_adapter_v1_adapter_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_extension_adapter_v1_adapter_proto_goTypes = []interface{}{
	(*Adapting)(nil),                // 0: semio.extension.adapter.v1.Adapting
	(*AttractionPointRequest)(nil),  // 1: semio.extension.adapter.v1.AttractionPointRequest
	(*RepresentationRequest)(nil),   // 2: semio.extension.adapter.v1.RepresentationRequest
	(*RepresentationsRequest)(nil),  // 3: semio.extension.adapter.v1.RepresentationsRequest
	(*RepresentationsResponse)(nil), // 4: semio.extension.adapter.v1.RepresentationsResponse
	nil,                             // 5: semio.extension.adapter.v1.AttractionPointRequest.ParametersEntry
	nil,                             // 6: semio.extension.adapter.v1.AttractionPointRequest.BiasEntry
	(*v1.Point)(nil),                // 7: semio.model.v1.Point
	(*v1.Representation)(nil),       // 8: semio.model.v1.Representation
	(*v1.Sobject)(nil),              // 9: semio.model.v1.Sobject
}
var file_extension_adapter_v1_adapter_proto_depIdxs = []int32{
	5,  // 0: semio.extension.adapter.v1.AttractionPointRequest.parameters:type_name -> semio.extension.adapter.v1.AttractionPointRequest.ParametersEntry
	6,  // 1: semio.extension.adapter.v1.AttractionPointRequest.bias:type_name -> semio.extension.adapter.v1.AttractionPointRequest.BiasEntry
	7,  // 2: semio.extension.adapter.v1.AttractionPointRequest.simple_representation:type_name -> semio.model.v1.Point
	8,  // 3: semio.extension.adapter.v1.AttractionPointRequest.full_representation:type_name -> semio.model.v1.Representation
	9,  // 4: semio.extension.adapter.v1.RepresentationRequest.sobject:type_name -> semio.model.v1.Sobject
	9,  // 5: semio.extension.adapter.v1.RepresentationsRequest.sobject:type_name -> semio.model.v1.Sobject
	8,  // 6: semio.extension.adapter.v1.RepresentationsResponse.representations:type_name -> semio.model.v1.Representation
	1,  // 7: semio.extension.adapter.v1.AdapterService.RequestAttractionPoint:input_type -> semio.extension.adapter.v1.AttractionPointRequest
	2,  // 8: semio.extension.adapter.v1.AdapterService.RequestRepresentation:input_type -> semio.extension.adapter.v1.RepresentationRequest
	3,  // 9: semio.extension.adapter.v1.AdapterService.RequestRepresentations:input_type -> semio.extension.adapter.v1.RepresentationsRequest
	7,  // 10: semio.extension.adapter.v1.AdapterService.RequestAttractionPoint:output_type -> semio.model.v1.Point
	8,  // 11: semio.extension.adapter.v1.AdapterService.RequestRepresentation:output_type -> semio.model.v1.Representation
	4,  // 12: semio.extension.adapter.v1.AdapterService.RequestRepresentations:output_type -> semio.extension.adapter.v1.RepresentationsResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_extension_adapter_v1_adapter_proto_init() }
func file_extension_adapter_v1_adapter_proto_init() {
	if File_extension_adapter_v1_adapter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_extension_adapter_v1_adapter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Adapting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_adapter_v1_adapter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttractionPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_adapter_v1_adapter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepresentationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_adapter_v1_adapter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepresentationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_adapter_v1_adapter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepresentationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_extension_adapter_v1_adapter_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AttractionPointRequest_SimpleRepresentation)(nil),
		(*AttractionPointRequest_FullRepresentation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extension_adapter_v1_adapter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_extension_adapter_v1_adapter_proto_goTypes,
		DependencyIndexes: file_extension_adapter_v1_adapter_proto_depIdxs,
		MessageInfos:      file_extension_adapter_v1_adapter_proto_msgTypes,
	}.Build()
	File_extension_adapter_v1_adapter_proto = out.File
	file_extension_adapter_v1_adapter_proto_rawDesc = nil
	file_extension_adapter_v1_adapter_proto_goTypes = nil
	file_extension_adapter_v1_adapter_proto_depIdxs = nil
}
