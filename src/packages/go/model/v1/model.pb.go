// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: model/v1/model.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The representation protocol determines what type of representation the attractor will see of the attracted in the attraction process.
type RepresentationProtocol int32

const (
	// The attractor sees no representation of the attracted.
	RepresentationProtocol_REPRESENTATIONPROTOCOL_NONE RepresentationProtocol = 0
	// In the simple representation protocol everything is representatedby a point.
	RepresentationProtocol_REPRESENTATIONPROTOCOL_SIMPLE RepresentationProtocol = 1
	// In the full representation protocol everything is representatedby it's native form where all information is available. This will most likely lead to strong coupled elements. Only use when absolutletly necissary.
	RepresentationProtocol_REPRESENTATIONPROTOCOL_FULL RepresentationProtocol = 2
)

// Enum value maps for RepresentationProtocol.
var (
	RepresentationProtocol_name = map[int32]string{
		0: "REPRESENTATIONPROTOCOL_NONE",
		1: "REPRESENTATIONPROTOCOL_SIMPLE",
		2: "REPRESENTATIONPROTOCOL_FULL",
	}
	RepresentationProtocol_value = map[string]int32{
		"REPRESENTATIONPROTOCOL_NONE":   0,
		"REPRESENTATIONPROTOCOL_SIMPLE": 1,
		"REPRESENTATIONPROTOCOL_FULL":   2,
	}
)

func (x RepresentationProtocol) Enum() *RepresentationProtocol {
	p := new(RepresentationProtocol)
	*p = x
	return p
}

func (x RepresentationProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepresentationProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_model_v1_model_proto_enumTypes[0].Descriptor()
}

func (RepresentationProtocol) Type() protoreflect.EnumType {
	return &file_model_v1_model_proto_enumTypes[0]
}

func (x RepresentationProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepresentationProtocol.Descriptor instead.
func (RepresentationProtocol) EnumDescriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{0}
}

// A layout strategy affects in which orders attractions are triggered.
type LayoutStrategy int32

const (
	// A breadth first layout strategy will attract all neighbours first before these start to the same with their neighbours.
	LayoutStrategy_LAYOUTSTRATEGY_BREADTHFIRST LayoutStrategy = 0
	// A depth first layout strategy will always prioritize to choose the neighbour of the neighbour first before the other neighbours of the root.
	LayoutStrategy_LAYOUTSTRATEGY_DEPTHFIRST LayoutStrategy = 1
)

// Enum value maps for LayoutStrategy.
var (
	LayoutStrategy_name = map[int32]string{
		0: "LAYOUTSTRATEGY_BREADTHFIRST",
		1: "LAYOUTSTRATEGY_DEPTHFIRST",
	}
	LayoutStrategy_value = map[string]int32{
		"LAYOUTSTRATEGY_BREADTHFIRST": 0,
		"LAYOUTSTRATEGY_DEPTHFIRST":   1,
	}
)

func (x LayoutStrategy) Enum() *LayoutStrategy {
	p := new(LayoutStrategy)
	*p = x
	return p
}

func (x LayoutStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LayoutStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_model_v1_model_proto_enumTypes[1].Descriptor()
}

func (LayoutStrategy) Type() protoreflect.EnumType {
	return &file_model_v1_model_proto_enumTypes[1]
}

func (x LayoutStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LayoutStrategy.Descriptor instead.
func (LayoutStrategy) EnumDescriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{1}
}

// A 3d point with x,y,z coordinates.
type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// x coordinate.
	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	// y coordinate
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	// z coordinate
	Z float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{0}
}

func (x *Point) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Point) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

// Quaternions represent (here) (rotational) orientation. It can be interpreted as the view of an element.
type Quaternion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	W float64 `protobuf:"fixed64,1,opt,name=w,proto3" json:"w,omitempty"`
	X float64 `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	Z float64 `protobuf:"fixed64,4,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Quaternion) Reset() {
	*x = Quaternion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quaternion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quaternion) ProtoMessage() {}

func (x *Quaternion) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quaternion.ProtoReflect.Descriptor instead.
func (*Quaternion) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{1}
}

func (x *Quaternion) GetW() float64 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *Quaternion) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Quaternion) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Quaternion) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

// A pose is a reference frame with a point of view (origin) and orientation (view).
type Pose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointOfView *Point      `protobuf:"bytes,1,opt,name=point_of_view,json=pointOfView,proto3" json:"point_of_view,omitempty"`
	View        *Quaternion `protobuf:"bytes,2,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *Pose) Reset() {
	*x = Pose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pose) ProtoMessage() {}

func (x *Pose) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pose.ProtoReflect.Descriptor instead.
func (*Pose) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{2}
}

func (x *Pose) GetPointOfView() *Point {
	if x != nil {
		return x.PointOfView
	}
	return nil
}

func (x *Pose) GetView() *Quaternion {
	if x != nil {
		return x.View
	}
	return nil
}

// A representation for an element.
type Representation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Use the abbrebivatation of the platform. You can find that in the constants part of the package.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Name of representation. This can be used for visualization purpose (e.g. conceptual, detailed, ...) or for functional purpose (e.g. statical, energetical, ...)
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Level of detail allows to further define representation details. Like name this can be used either for visualizaztion purpose (e.g. 200 (scale 1to200)) or functional purpose (e.g level of structural detail)
	Lod int64 `protobuf:"varint,3,opt,name=lod,proto3" json:"lod,omitempty"`
	// The body depends on the serilization format of the representation.
	//
	// Types that are assignable to Body:
	//	*Representation_ByteArray
	//	*Representation_Text
	Body isRepresentation_Body `protobuf_oneof:"body"`
}

func (x *Representation) Reset() {
	*x = Representation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Representation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Representation) ProtoMessage() {}

func (x *Representation) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Representation.ProtoReflect.Descriptor instead.
func (*Representation) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{3}
}

func (x *Representation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Representation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Representation) GetLod() int64 {
	if x != nil {
		return x.Lod
	}
	return 0
}

func (m *Representation) GetBody() isRepresentation_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Representation) GetByteArray() []byte {
	if x, ok := x.GetBody().(*Representation_ByteArray); ok {
		return x.ByteArray
	}
	return nil
}

func (x *Representation) GetText() string {
	if x, ok := x.GetBody().(*Representation_Text); ok {
		return x.Text
	}
	return ""
}

type isRepresentation_Body interface {
	isRepresentation_Body()
}

type Representation_ByteArray struct {
	// A byte array is an encoded and optimized body that needs a dedicated package to read the content.
	ByteArray []byte `protobuf:"bytes,4,opt,name=byteArray,proto3,oneof"`
}

type Representation_Text struct {
	// A textual body is typical readable by humans and computers often allowing to be usefully read even outside the official packages.
	Text string `protobuf:"bytes,5,opt,name=text,proto3,oneof"`
}

func (*Representation_ByteArray) isRepresentation_Body() {}

func (*Representation_Text) isRepresentation_Body() {}

// Instance information for an element.
type Sobject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id that allows to distinguish it from other sobjects.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The url of the element definition.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// The (rough) pose of the sobject. Note that in the attraction process it will most likely be displaced and adjusted.
	Pose *Pose `protobuf:"bytes,3,opt,name=pose,proto3" json:"pose,omitempty"`
	// Parameters for the element.
	Parameters map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Sobject) Reset() {
	*x = Sobject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sobject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sobject) ProtoMessage() {}

func (x *Sobject) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sobject.ProtoReflect.Descriptor instead.
func (*Sobject) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{4}
}

func (x *Sobject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Sobject) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Sobject) GetPose() *Pose {
	if x != nil {
		return x.Pose
	}
	return nil
}

func (x *Sobject) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// An attraction participant participates in an attraction process.
type AttractionParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of participating sobject.
	PatricipantId string `protobuf:"bytes,1,opt,name=patricipant_id,json=patricipantId,proto3" json:"patricipant_id,omitempty"`
	// An optional representation of the participant.
	RepresentationProtocol RepresentationProtocol `protobuf:"varint,2,opt,name=representationProtocol,proto3,enum=semio.model.v1.RepresentationProtocol" json:"representationProtocol,omitempty"`
	// Optional port names to connect to. The hierarchy should matter
	Ports []string `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	// Optional parameters to bias the attraction.
	Bias map[string]string `protobuf:"bytes,4,rep,name=bias,proto3" json:"bias,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AttractionParticipant) Reset() {
	*x = AttractionParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttractionParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttractionParticipant) ProtoMessage() {}

func (x *AttractionParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttractionParticipant.ProtoReflect.Descriptor instead.
func (*AttractionParticipant) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{5}
}

func (x *AttractionParticipant) GetPatricipantId() string {
	if x != nil {
		return x.PatricipantId
	}
	return ""
}

func (x *AttractionParticipant) GetRepresentationProtocol() RepresentationProtocol {
	if x != nil {
		return x.RepresentationProtocol
	}
	return RepresentationProtocol_REPRESENTATIONPROTOCOL_NONE
}

func (x *AttractionParticipant) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *AttractionParticipant) GetBias() map[string]string {
	if x != nil {
		return x.Bias
	}
	return nil
}

// An attraction can be used to attract an attracted attraction participant to an attractor attraction participant.
type Attraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id that allows to distinguish it from other attractions.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The attractor is expected to be the fixed sobject.
	Attractor *AttractionParticipant `protobuf:"bytes,2,opt,name=attractor,proto3" json:"attractor,omitempty"`
	// The attracted is expected to be the flexible sobject that adjusts its point of view.
	Attracted *AttractionParticipant `protobuf:"bytes,3,opt,name=attracted,proto3" json:"attracted,omitempty"`
}

func (x *Attraction) Reset() {
	*x = Attraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attraction) ProtoMessage() {}

func (x *Attraction) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attraction.ProtoReflect.Descriptor instead.
func (*Attraction) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{6}
}

func (x *Attraction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Attraction) GetAttractor() *AttractionParticipant {
	if x != nil {
		return x.Attractor
	}
	return nil
}

func (x *Attraction) GetAttracted() *AttractionParticipant {
	if x != nil {
		return x.Attracted
	}
	return nil
}

// An attraction tree contains exact information in which order attractions should be triggered.
type AttractionTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttractionId string            `protobuf:"bytes,1,opt,name=attraction_id,json=attractionId,proto3" json:"attraction_id,omitempty"`
	Children     []*AttractionTree `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *AttractionTree) Reset() {
	*x = AttractionTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttractionTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttractionTree) ProtoMessage() {}

func (x *AttractionTree) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttractionTree.ProtoReflect.Descriptor instead.
func (*AttractionTree) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{7}
}

func (x *AttractionTree) GetAttractionId() string {
	if x != nil {
		return x.AttractionId
	}
	return ""
}

func (x *AttractionTree) GetChildren() []*AttractionTree {
	if x != nil {
		return x.Children
	}
	return nil
}

// A layout (graph) is an assembly plan for a set of sobjects and their attractions between each other.
type Layout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sobjects    []*Sobject    `protobuf:"bytes,1,rep,name=sobjects,proto3" json:"sobjects,omitempty"`
	Attractions []*Attraction `protobuf:"bytes,2,rep,name=attractions,proto3" json:"attractions,omitempty"`
	// This sobject acts as an anker in the layout.
	RootSobjectId string         `protobuf:"bytes,3,opt,name=root_sobject_id,json=rootSobjectId,proto3" json:"root_sobject_id,omitempty"`
	Stragegy      LayoutStrategy `protobuf:"varint,4,opt,name=stragegy,proto3,enum=semio.model.v1.LayoutStrategy" json:"stragegy,omitempty"`
	// Optional attraction trees with root sobject id as key and attraction tree as value.
	AttractionTrees []*AttractionTree `protobuf:"bytes,5,rep,name=attractionTrees,proto3" json:"attractionTrees,omitempty"`
}

func (x *Layout) Reset() {
	*x = Layout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Layout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Layout) ProtoMessage() {}

func (x *Layout) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Layout.ProtoReflect.Descriptor instead.
func (*Layout) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{8}
}

func (x *Layout) GetSobjects() []*Sobject {
	if x != nil {
		return x.Sobjects
	}
	return nil
}

func (x *Layout) GetAttractions() []*Attraction {
	if x != nil {
		return x.Attractions
	}
	return nil
}

func (x *Layout) GetRootSobjectId() string {
	if x != nil {
		return x.RootSobjectId
	}
	return ""
}

func (x *Layout) GetStragegy() LayoutStrategy {
	if x != nil {
		return x.Stragegy
	}
	return LayoutStrategy_LAYOUTSTRATEGY_BREADTHFIRST
}

func (x *Layout) GetAttractionTrees() []*AttractionTree {
	if x != nil {
		return x.AttractionTrees
	}
	return nil
}

// An element is the atom of a design. It has several representations and a pose.
type Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pose            *Pose             `protobuf:"bytes,1,opt,name=pose,proto3" json:"pose,omitempty"`
	Representations []*Representation `protobuf:"bytes,2,rep,name=representations,proto3" json:"representations,omitempty"`
}

func (x *Element) Reset() {
	*x = Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element) ProtoMessage() {}

func (x *Element) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element.ProtoReflect.Descriptor instead.
func (*Element) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{9}
}

func (x *Element) GetPose() *Pose {
	if x != nil {
		return x.Pose
	}
	return nil
}

func (x *Element) GetRepresentations() []*Representation {
	if x != nil {
		return x.Representations
	}
	return nil
}

// A design is an aggregation of elements.
type Design struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*Element `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *Design) Reset() {
	*x = Design{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Design) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Design) ProtoMessage() {}

func (x *Design) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Design.ProtoReflect.Descriptor instead.
func (*Design) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{10}
}

func (x *Design) GetElements() []*Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

// A layout modification describes declaratively a layout and the layout after its modification. The rules on how to imperatively change such a layout need to found by the transformation system.
type LayoutModification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context         *Layout `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	ModifiedContext *Layout `protobuf:"bytes,2,opt,name=modified_context,json=modifiedContext,proto3" json:"modified_context,omitempty"`
}

func (x *LayoutModification) Reset() {
	*x = LayoutModification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayoutModification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayoutModification) ProtoMessage() {}

func (x *LayoutModification) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayoutModification.ProtoReflect.Descriptor instead.
func (*LayoutModification) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{11}
}

func (x *LayoutModification) GetContext() *Layout {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *LayoutModification) GetModifiedContext() *Layout {
	if x != nil {
		return x.ModifiedContext
	}
	return nil
}

// A decision strategy holds information on how modifications are applied.
type LayoutModificationStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The match count describes how often a layout modification should be applied. It beeing finite will make sure that the system always terminates. Make sure to set the threshold high enough.
	MatchCount int64 `protobuf:"varint,1,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
}

func (x *LayoutModificationStrategy) Reset() {
	*x = LayoutModificationStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayoutModificationStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayoutModificationStrategy) ProtoMessage() {}

func (x *LayoutModificationStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayoutModificationStrategy.ProtoReflect.Descriptor instead.
func (*LayoutModificationStrategy) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{12}
}

func (x *LayoutModificationStrategy) GetMatchCount() int64 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

// A decision is a layout modification with a strategy on how to apply it to a new layout.
type Decision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modification *LayoutModification         `protobuf:"bytes,1,opt,name=modification,proto3" json:"modification,omitempty"`
	Strategy     *LayoutModificationStrategy `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
}

func (x *Decision) Reset() {
	*x = Decision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_v1_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Decision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decision) ProtoMessage() {}

func (x *Decision) ProtoReflect() protoreflect.Message {
	mi := &file_model_v1_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decision.ProtoReflect.Descriptor instead.
func (*Decision) Descriptor() ([]byte, []int) {
	return file_model_v1_model_proto_rawDescGZIP(), []int{13}
}

func (x *Decision) GetModification() *LayoutModification {
	if x != nil {
		return x.Modification
	}
	return nil
}

func (x *Decision) GetStrategy() *LayoutModificationStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

var File_model_v1_model_proto protoreflect.FileDescriptor

var file_model_v1_model_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0x31, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a,
	0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x22, 0x44, 0x0a, 0x0a, 0x51, 0x75, 0x61,
	0x74, 0x65, 0x72, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x77, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x22,
	0x71, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x6f, 0x66, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x66, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x2e, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x6f, 0x64, 0x12,
	0x1e, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12,
	0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xdd, 0x01,
	0x0a, 0x07, 0x53, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x04, 0x70,
	0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6d, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x52,
	0x04, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x6d, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x3d,
	0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x02,
	0x0a, 0x15, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x74, 0x72, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x5e,
	0x0a, 0x16, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x16, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x04, 0x62, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x61, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x62, 0x69, 0x61, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x42, 0x69, 0x61,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x43, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x6d, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x22, 0x71, 0x0a, 0x0e, 0x41,
	0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xa9,
	0x02, 0x0a, 0x06, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x73, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x3c,
	0x0a, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x73, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x53, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x67, 0x65, 0x67, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x67, 0x65, 0x67, 0x79,
	0x12, 0x48, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72,
	0x65, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x6d, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x07, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3d, 0x0a, 0x06, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x12, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x41, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65,
	0x6d, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x3d, 0x0a, 0x1a, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65, 0x6d,
	0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x2a, 0x7d, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45,
	0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x52,
	0x45, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x1f,
	0x0a, 0x1b, 0x52, 0x45, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x02, 0x2a,
	0x50, 0x0a, 0x0e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x1f, 0x0a, 0x1b, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x53, 0x54, 0x52, 0x41, 0x54,
	0x45, 0x47, 0x59, 0x5f, 0x42, 0x52, 0x45, 0x41, 0x44, 0x54, 0x48, 0x46, 0x49, 0x52, 0x53, 0x54,
	0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x53, 0x54, 0x52, 0x41,
	0x54, 0x45, 0x47, 0x59, 0x5f, 0x44, 0x45, 0x50, 0x54, 0x48, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10,
	0x01, 0x42, 0xab, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x61, 0x6c, 0x75, 0x2f, 0x73, 0x65, 0x6d, 0x69, 0x6f, 0x2f, 0x73,
	0x72, 0x63, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x4d, 0x58, 0xaa, 0x02, 0x0e,
	0x53, 0x65, 0x6d, 0x69, 0x6f, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0e, 0x53, 0x65, 0x6d, 0x69, 0x6f, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1a, 0x53, 0x65, 0x6d, 0x69, 0x6f, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x53,
	0x65, 0x6d, 0x69, 0x6f, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_v1_model_proto_rawDescOnce sync.Once
	file_model_v1_model_proto_rawDescData = file_model_v1_model_proto_rawDesc
)

func file_model_v1_model_proto_rawDescGZIP() []byte {
	file_model_v1_model_proto_rawDescOnce.Do(func() {
		file_model_v1_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_v1_model_proto_rawDescData)
	})
	return file_model_v1_model_proto_rawDescData
}

var file_model_v1_model_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_model_v1_model_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_model_v1_model_proto_goTypes = []interface{}{
	(RepresentationProtocol)(0),        // 0: semio.model.v1.RepresentationProtocol
	(LayoutStrategy)(0),                // 1: semio.model.v1.LayoutStrategy
	(*Point)(nil),                      // 2: semio.model.v1.Point
	(*Quaternion)(nil),                 // 3: semio.model.v1.Quaternion
	(*Pose)(nil),                       // 4: semio.model.v1.Pose
	(*Representation)(nil),             // 5: semio.model.v1.Representation
	(*Sobject)(nil),                    // 6: semio.model.v1.Sobject
	(*AttractionParticipant)(nil),      // 7: semio.model.v1.AttractionParticipant
	(*Attraction)(nil),                 // 8: semio.model.v1.Attraction
	(*AttractionTree)(nil),             // 9: semio.model.v1.AttractionTree
	(*Layout)(nil),                     // 10: semio.model.v1.Layout
	(*Element)(nil),                    // 11: semio.model.v1.Element
	(*Design)(nil),                     // 12: semio.model.v1.Design
	(*LayoutModification)(nil),         // 13: semio.model.v1.LayoutModification
	(*LayoutModificationStrategy)(nil), // 14: semio.model.v1.LayoutModificationStrategy
	(*Decision)(nil),                   // 15: semio.model.v1.Decision
	nil,                                // 16: semio.model.v1.Sobject.ParametersEntry
	nil,                                // 17: semio.model.v1.AttractionParticipant.BiasEntry
}
var file_model_v1_model_proto_depIdxs = []int32{
	2,  // 0: semio.model.v1.Pose.point_of_view:type_name -> semio.model.v1.Point
	3,  // 1: semio.model.v1.Pose.view:type_name -> semio.model.v1.Quaternion
	4,  // 2: semio.model.v1.Sobject.pose:type_name -> semio.model.v1.Pose
	16, // 3: semio.model.v1.Sobject.parameters:type_name -> semio.model.v1.Sobject.ParametersEntry
	0,  // 4: semio.model.v1.AttractionParticipant.representationProtocol:type_name -> semio.model.v1.RepresentationProtocol
	17, // 5: semio.model.v1.AttractionParticipant.bias:type_name -> semio.model.v1.AttractionParticipant.BiasEntry
	7,  // 6: semio.model.v1.Attraction.attractor:type_name -> semio.model.v1.AttractionParticipant
	7,  // 7: semio.model.v1.Attraction.attracted:type_name -> semio.model.v1.AttractionParticipant
	9,  // 8: semio.model.v1.AttractionTree.children:type_name -> semio.model.v1.AttractionTree
	6,  // 9: semio.model.v1.Layout.sobjects:type_name -> semio.model.v1.Sobject
	8,  // 10: semio.model.v1.Layout.attractions:type_name -> semio.model.v1.Attraction
	1,  // 11: semio.model.v1.Layout.stragegy:type_name -> semio.model.v1.LayoutStrategy
	9,  // 12: semio.model.v1.Layout.attractionTrees:type_name -> semio.model.v1.AttractionTree
	4,  // 13: semio.model.v1.Element.pose:type_name -> semio.model.v1.Pose
	5,  // 14: semio.model.v1.Element.representations:type_name -> semio.model.v1.Representation
	11, // 15: semio.model.v1.Design.elements:type_name -> semio.model.v1.Element
	10, // 16: semio.model.v1.LayoutModification.context:type_name -> semio.model.v1.Layout
	10, // 17: semio.model.v1.LayoutModification.modified_context:type_name -> semio.model.v1.Layout
	13, // 18: semio.model.v1.Decision.modification:type_name -> semio.model.v1.LayoutModification
	14, // 19: semio.model.v1.Decision.strategy:type_name -> semio.model.v1.LayoutModificationStrategy
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_model_v1_model_proto_init() }
func file_model_v1_model_proto_init() {
	if File_model_v1_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_v1_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quaternion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Representation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sobject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttractionParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttractionTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Layout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Design); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayoutModification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayoutModificationStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_v1_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Decision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_model_v1_model_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Representation_ByteArray)(nil),
		(*Representation_Text)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_v1_model_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_v1_model_proto_goTypes,
		DependencyIndexes: file_model_v1_model_proto_depIdxs,
		EnumInfos:         file_model_v1_model_proto_enumTypes,
		MessageInfos:      file_model_v1_model_proto_msgTypes,
	}.Build()
	File_model_v1_model_proto = out.File
	file_model_v1_model_proto_rawDesc = nil
	file_model_v1_model_proto_goTypes = nil
	file_model_v1_model_proto_depIdxs = nil
}
