// source: model.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.semio.model.v1.Attraction', null, global);
goog.exportSymbol('proto.semio.model.v1.AttractionChain', null, global);
goog.exportSymbol('proto.semio.model.v1.AttractionParticipant', null, global);
goog.exportSymbol('proto.semio.model.v1.AttractionStragegy', null, global);
goog.exportSymbol('proto.semio.model.v1.Choreography', null, global);
goog.exportSymbol('proto.semio.model.v1.Decision', null, global);
goog.exportSymbol('proto.semio.model.v1.Design', null, global);
goog.exportSymbol('proto.semio.model.v1.Element', null, global);
goog.exportSymbol('proto.semio.model.v1.Layout', null, global);
goog.exportSymbol('proto.semio.model.v1.LayoutModification', null, global);
goog.exportSymbol('proto.semio.model.v1.LayoutModificationStrategy', null, global);
goog.exportSymbol('proto.semio.model.v1.Point', null, global);
goog.exportSymbol('proto.semio.model.v1.Pose', null, global);
goog.exportSymbol('proto.semio.model.v1.Quaternion', null, global);
goog.exportSymbol('proto.semio.model.v1.Representation', null, global);
goog.exportSymbol('proto.semio.model.v1.Representations', null, global);
goog.exportSymbol('proto.semio.model.v1.Sobject', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Point.displayName = 'proto.semio.model.v1.Point';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Quaternion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.Quaternion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Quaternion.displayName = 'proto.semio.model.v1.Quaternion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Pose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.Pose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Pose.displayName = 'proto.semio.model.v1.Pose';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Representation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.Representation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Representation.displayName = 'proto.semio.model.v1.Representation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Representations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.semio.model.v1.Representations.repeatedFields_, null);
};
goog.inherits(proto.semio.model.v1.Representations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Representations.displayName = 'proto.semio.model.v1.Representations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Sobject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.Sobject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Sobject.displayName = 'proto.semio.model.v1.Sobject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.AttractionStragegy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.AttractionStragegy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.AttractionStragegy.displayName = 'proto.semio.model.v1.AttractionStragegy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.AttractionParticipant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.AttractionParticipant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.AttractionParticipant.displayName = 'proto.semio.model.v1.AttractionParticipant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Attraction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.Attraction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Attraction.displayName = 'proto.semio.model.v1.Attraction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Layout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.semio.model.v1.Layout.repeatedFields_, null);
};
goog.inherits(proto.semio.model.v1.Layout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Layout.displayName = 'proto.semio.model.v1.Layout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.AttractionChain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.semio.model.v1.AttractionChain.repeatedFields_, null);
};
goog.inherits(proto.semio.model.v1.AttractionChain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.AttractionChain.displayName = 'proto.semio.model.v1.AttractionChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Choreography = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.semio.model.v1.Choreography.repeatedFields_, null);
};
goog.inherits(proto.semio.model.v1.Choreography, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Choreography.displayName = 'proto.semio.model.v1.Choreography';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Element = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.Element, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Element.displayName = 'proto.semio.model.v1.Element';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Design = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.semio.model.v1.Design.repeatedFields_, null);
};
goog.inherits(proto.semio.model.v1.Design, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Design.displayName = 'proto.semio.model.v1.Design';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.LayoutModification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.LayoutModification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.LayoutModification.displayName = 'proto.semio.model.v1.LayoutModification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.LayoutModificationStrategy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.LayoutModificationStrategy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.LayoutModificationStrategy.displayName = 'proto.semio.model.v1.LayoutModificationStrategy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.semio.model.v1.Decision = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.semio.model.v1.Decision, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.semio.model.v1.Decision.displayName = 'proto.semio.model.v1.Decision';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Point.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Point} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Point.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Point}
 */
proto.semio.model.v1.Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Point;
  return proto.semio.model.v1.Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Point}
 */
proto.semio.model.v1.Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Point.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Point.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.semio.model.v1.Point.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.semio.model.v1.Point} returns this
 */
proto.semio.model.v1.Point.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.semio.model.v1.Point.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.semio.model.v1.Point} returns this
 */
proto.semio.model.v1.Point.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.semio.model.v1.Point.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.semio.model.v1.Point} returns this
 */
proto.semio.model.v1.Point.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Quaternion.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Quaternion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Quaternion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Quaternion.toObject = function(includeInstance, msg) {
  var f, obj = {
    w: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Quaternion}
 */
proto.semio.model.v1.Quaternion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Quaternion;
  return proto.semio.model.v1.Quaternion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Quaternion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Quaternion}
 */
proto.semio.model.v1.Quaternion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setW(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Quaternion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Quaternion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Quaternion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Quaternion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getW();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double w = 1;
 * @return {number}
 */
proto.semio.model.v1.Quaternion.prototype.getW = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.semio.model.v1.Quaternion} returns this
 */
proto.semio.model.v1.Quaternion.prototype.setW = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double x = 2;
 * @return {number}
 */
proto.semio.model.v1.Quaternion.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.semio.model.v1.Quaternion} returns this
 */
proto.semio.model.v1.Quaternion.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double y = 3;
 * @return {number}
 */
proto.semio.model.v1.Quaternion.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.semio.model.v1.Quaternion} returns this
 */
proto.semio.model.v1.Quaternion.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double z = 4;
 * @return {number}
 */
proto.semio.model.v1.Quaternion.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.semio.model.v1.Quaternion} returns this
 */
proto.semio.model.v1.Quaternion.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Pose.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Pose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Pose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Pose.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointOfView: (f = msg.getPointOfView()) && proto.semio.model.v1.Point.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.semio.model.v1.Quaternion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Pose}
 */
proto.semio.model.v1.Pose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Pose;
  return proto.semio.model.v1.Pose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Pose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Pose}
 */
proto.semio.model.v1.Pose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.Point;
      reader.readMessage(value,proto.semio.model.v1.Point.deserializeBinaryFromReader);
      msg.setPointOfView(value);
      break;
    case 2:
      var value = new proto.semio.model.v1.Quaternion;
      reader.readMessage(value,proto.semio.model.v1.Quaternion.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Pose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Pose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Pose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Pose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointOfView();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.semio.model.v1.Point.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.semio.model.v1.Quaternion.serializeBinaryToWriter
    );
  }
};


/**
 * optional Point point_of_view = 1;
 * @return {?proto.semio.model.v1.Point}
 */
proto.semio.model.v1.Pose.prototype.getPointOfView = function() {
  return /** @type{?proto.semio.model.v1.Point} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.Point, 1));
};


/**
 * @param {?proto.semio.model.v1.Point|undefined} value
 * @return {!proto.semio.model.v1.Pose} returns this
*/
proto.semio.model.v1.Pose.prototype.setPointOfView = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Pose} returns this
 */
proto.semio.model.v1.Pose.prototype.clearPointOfView = function() {
  return this.setPointOfView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Pose.prototype.hasPointOfView = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Quaternion view = 2;
 * @return {?proto.semio.model.v1.Quaternion}
 */
proto.semio.model.v1.Pose.prototype.getView = function() {
  return /** @type{?proto.semio.model.v1.Quaternion} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.Quaternion, 2));
};


/**
 * @param {?proto.semio.model.v1.Quaternion|undefined} value
 * @return {!proto.semio.model.v1.Pose} returns this
*/
proto.semio.model.v1.Pose.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Pose} returns this
 */
proto.semio.model.v1.Pose.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Pose.prototype.hasView = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Representation.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Representation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Representation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Representation.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    body: (f = msg.getBody()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lod: jspb.Message.getFieldWithDefault(msg, 4, 0),
    metadata: (f = msg.getMetadata()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Representation}
 */
proto.semio.model.v1.Representation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Representation;
  return proto.semio.model.v1.Representation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Representation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Representation}
 */
proto.semio.model.v1.Representation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLod(value);
      break;
    case 5:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Representation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Representation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Representation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Representation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLod();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.semio.model.v1.Representation.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.semio.model.v1.Representation} returns this
 */
proto.semio.model.v1.Representation.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any body = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.semio.model.v1.Representation.prototype.getBody = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.semio.model.v1.Representation} returns this
*/
proto.semio.model.v1.Representation.prototype.setBody = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Representation} returns this
 */
proto.semio.model.v1.Representation.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Representation.prototype.hasBody = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.semio.model.v1.Representation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.semio.model.v1.Representation} returns this
 */
proto.semio.model.v1.Representation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 lod = 4;
 * @return {number}
 */
proto.semio.model.v1.Representation.prototype.getLod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.semio.model.v1.Representation} returns this
 */
proto.semio.model.v1.Representation.prototype.setLod = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Any metadata = 5;
 * @return {?proto.google.protobuf.Any}
 */
proto.semio.model.v1.Representation.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 5));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.semio.model.v1.Representation} returns this
*/
proto.semio.model.v1.Representation.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Representation} returns this
 */
proto.semio.model.v1.Representation.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Representation.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.semio.model.v1.Representations.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Representations.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Representations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Representations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Representations.toObject = function(includeInstance, msg) {
  var f, obj = {
    representationsList: jspb.Message.toObjectList(msg.getRepresentationsList(),
    proto.semio.model.v1.Representation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Representations}
 */
proto.semio.model.v1.Representations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Representations;
  return proto.semio.model.v1.Representations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Representations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Representations}
 */
proto.semio.model.v1.Representations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.Representation;
      reader.readMessage(value,proto.semio.model.v1.Representation.deserializeBinaryFromReader);
      msg.addRepresentations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Representations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Representations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Representations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Representations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepresentationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.semio.model.v1.Representation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Representation representations = 1;
 * @return {!Array<!proto.semio.model.v1.Representation>}
 */
proto.semio.model.v1.Representations.prototype.getRepresentationsList = function() {
  return /** @type{!Array<!proto.semio.model.v1.Representation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.semio.model.v1.Representation, 1));
};


/**
 * @param {!Array<!proto.semio.model.v1.Representation>} value
 * @return {!proto.semio.model.v1.Representations} returns this
*/
proto.semio.model.v1.Representations.prototype.setRepresentationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.semio.model.v1.Representation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.semio.model.v1.Representation}
 */
proto.semio.model.v1.Representations.prototype.addRepresentations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.semio.model.v1.Representation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.semio.model.v1.Representations} returns this
 */
proto.semio.model.v1.Representations.prototype.clearRepresentationsList = function() {
  return this.setRepresentationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Sobject.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Sobject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Sobject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Sobject.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pose: (f = msg.getPose()) && proto.semio.model.v1.Pose.toObject(includeInstance, f),
    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Sobject}
 */
proto.semio.model.v1.Sobject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Sobject;
  return proto.semio.model.v1.Sobject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Sobject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Sobject}
 */
proto.semio.model.v1.Sobject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = new proto.semio.model.v1.Pose;
      reader.readMessage(value,proto.semio.model.v1.Pose.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    case 4:
      var value = msg.getParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Sobject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Sobject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Sobject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Sobject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.semio.model.v1.Pose.serializeBinaryToWriter
    );
  }
  f = message.getParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.semio.model.v1.Sobject.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.semio.model.v1.Sobject} returns this
 */
proto.semio.model.v1.Sobject.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.semio.model.v1.Sobject.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.semio.model.v1.Sobject} returns this
 */
proto.semio.model.v1.Sobject.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Pose pose = 3;
 * @return {?proto.semio.model.v1.Pose}
 */
proto.semio.model.v1.Sobject.prototype.getPose = function() {
  return /** @type{?proto.semio.model.v1.Pose} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.Pose, 3));
};


/**
 * @param {?proto.semio.model.v1.Pose|undefined} value
 * @return {!proto.semio.model.v1.Sobject} returns this
*/
proto.semio.model.v1.Sobject.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Sobject} returns this
 */
proto.semio.model.v1.Sobject.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Sobject.prototype.hasPose = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, google.protobuf.Any> parameters = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.semio.model.v1.Sobject.prototype.getParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.semio.model.v1.Sobject} returns this
 */
proto.semio.model.v1.Sobject.prototype.clearParametersMap = function() {
  this.getParametersMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.AttractionStragegy.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.AttractionStragegy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.AttractionStragegy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.AttractionStragegy.toObject = function(includeInstance, msg) {
  var f, obj = {
    representation: (f = msg.getRepresentation()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    port: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.AttractionStragegy}
 */
proto.semio.model.v1.AttractionStragegy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.AttractionStragegy;
  return proto.semio.model.v1.AttractionStragegy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.AttractionStragegy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.AttractionStragegy}
 */
proto.semio.model.v1.AttractionStragegy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setRepresentation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPort(value);
      break;
    case 3:
      var value = msg.getParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.AttractionStragegy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.AttractionStragegy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.AttractionStragegy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.AttractionStragegy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepresentation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getPort();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
};


/**
 * optional google.protobuf.Any representation = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.semio.model.v1.AttractionStragegy.prototype.getRepresentation = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.semio.model.v1.AttractionStragegy} returns this
*/
proto.semio.model.v1.AttractionStragegy.prototype.setRepresentation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.AttractionStragegy} returns this
 */
proto.semio.model.v1.AttractionStragegy.prototype.clearRepresentation = function() {
  return this.setRepresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.AttractionStragegy.prototype.hasRepresentation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string port = 2;
 * @return {string}
 */
proto.semio.model.v1.AttractionStragegy.prototype.getPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.semio.model.v1.AttractionStragegy} returns this
 */
proto.semio.model.v1.AttractionStragegy.prototype.setPort = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, google.protobuf.Any> parameters = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.semio.model.v1.AttractionStragegy.prototype.getParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.semio.model.v1.AttractionStragegy} returns this
 */
proto.semio.model.v1.AttractionStragegy.prototype.clearParametersMap = function() {
  this.getParametersMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.AttractionParticipant.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.AttractionParticipant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.AttractionParticipant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.AttractionParticipant.toObject = function(includeInstance, msg) {
  var f, obj = {
    sobjectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    strategy: (f = msg.getStrategy()) && proto.semio.model.v1.AttractionStragegy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.AttractionParticipant}
 */
proto.semio.model.v1.AttractionParticipant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.AttractionParticipant;
  return proto.semio.model.v1.AttractionParticipant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.AttractionParticipant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.AttractionParticipant}
 */
proto.semio.model.v1.AttractionParticipant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSobjectId(value);
      break;
    case 2:
      var value = new proto.semio.model.v1.AttractionStragegy;
      reader.readMessage(value,proto.semio.model.v1.AttractionStragegy.deserializeBinaryFromReader);
      msg.setStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.AttractionParticipant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.AttractionParticipant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.AttractionParticipant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.AttractionParticipant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSobjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStrategy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.semio.model.v1.AttractionStragegy.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sobject_id = 1;
 * @return {string}
 */
proto.semio.model.v1.AttractionParticipant.prototype.getSobjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.semio.model.v1.AttractionParticipant} returns this
 */
proto.semio.model.v1.AttractionParticipant.prototype.setSobjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional AttractionStragegy strategy = 2;
 * @return {?proto.semio.model.v1.AttractionStragegy}
 */
proto.semio.model.v1.AttractionParticipant.prototype.getStrategy = function() {
  return /** @type{?proto.semio.model.v1.AttractionStragegy} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.AttractionStragegy, 2));
};


/**
 * @param {?proto.semio.model.v1.AttractionStragegy|undefined} value
 * @return {!proto.semio.model.v1.AttractionParticipant} returns this
*/
proto.semio.model.v1.AttractionParticipant.prototype.setStrategy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.AttractionParticipant} returns this
 */
proto.semio.model.v1.AttractionParticipant.prototype.clearStrategy = function() {
  return this.setStrategy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.AttractionParticipant.prototype.hasStrategy = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Attraction.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Attraction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Attraction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Attraction.toObject = function(includeInstance, msg) {
  var f, obj = {
    attractor: (f = msg.getAttractor()) && proto.semio.model.v1.AttractionParticipant.toObject(includeInstance, f),
    attracted: (f = msg.getAttracted()) && proto.semio.model.v1.AttractionParticipant.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Attraction}
 */
proto.semio.model.v1.Attraction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Attraction;
  return proto.semio.model.v1.Attraction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Attraction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Attraction}
 */
proto.semio.model.v1.Attraction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.AttractionParticipant;
      reader.readMessage(value,proto.semio.model.v1.AttractionParticipant.deserializeBinaryFromReader);
      msg.setAttractor(value);
      break;
    case 2:
      var value = new proto.semio.model.v1.AttractionParticipant;
      reader.readMessage(value,proto.semio.model.v1.AttractionParticipant.deserializeBinaryFromReader);
      msg.setAttracted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Attraction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Attraction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Attraction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Attraction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttractor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.semio.model.v1.AttractionParticipant.serializeBinaryToWriter
    );
  }
  f = message.getAttracted();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.semio.model.v1.AttractionParticipant.serializeBinaryToWriter
    );
  }
};


/**
 * optional AttractionParticipant attractor = 1;
 * @return {?proto.semio.model.v1.AttractionParticipant}
 */
proto.semio.model.v1.Attraction.prototype.getAttractor = function() {
  return /** @type{?proto.semio.model.v1.AttractionParticipant} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.AttractionParticipant, 1));
};


/**
 * @param {?proto.semio.model.v1.AttractionParticipant|undefined} value
 * @return {!proto.semio.model.v1.Attraction} returns this
*/
proto.semio.model.v1.Attraction.prototype.setAttractor = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Attraction} returns this
 */
proto.semio.model.v1.Attraction.prototype.clearAttractor = function() {
  return this.setAttractor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Attraction.prototype.hasAttractor = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AttractionParticipant attracted = 2;
 * @return {?proto.semio.model.v1.AttractionParticipant}
 */
proto.semio.model.v1.Attraction.prototype.getAttracted = function() {
  return /** @type{?proto.semio.model.v1.AttractionParticipant} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.AttractionParticipant, 2));
};


/**
 * @param {?proto.semio.model.v1.AttractionParticipant|undefined} value
 * @return {!proto.semio.model.v1.Attraction} returns this
*/
proto.semio.model.v1.Attraction.prototype.setAttracted = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Attraction} returns this
 */
proto.semio.model.v1.Attraction.prototype.clearAttracted = function() {
  return this.setAttracted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Attraction.prototype.hasAttracted = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.semio.model.v1.Layout.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Layout.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Layout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Layout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Layout.toObject = function(includeInstance, msg) {
  var f, obj = {
    sobjectsList: jspb.Message.toObjectList(msg.getSobjectsList(),
    proto.semio.model.v1.Sobject.toObject, includeInstance),
    attractionsList: jspb.Message.toObjectList(msg.getAttractionsList(),
    proto.semio.model.v1.Attraction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Layout}
 */
proto.semio.model.v1.Layout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Layout;
  return proto.semio.model.v1.Layout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Layout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Layout}
 */
proto.semio.model.v1.Layout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.Sobject;
      reader.readMessage(value,proto.semio.model.v1.Sobject.deserializeBinaryFromReader);
      msg.addSobjects(value);
      break;
    case 2:
      var value = new proto.semio.model.v1.Attraction;
      reader.readMessage(value,proto.semio.model.v1.Attraction.deserializeBinaryFromReader);
      msg.addAttractions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Layout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Layout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Layout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Layout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSobjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.semio.model.v1.Sobject.serializeBinaryToWriter
    );
  }
  f = message.getAttractionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.semio.model.v1.Attraction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Sobject sobjects = 1;
 * @return {!Array<!proto.semio.model.v1.Sobject>}
 */
proto.semio.model.v1.Layout.prototype.getSobjectsList = function() {
  return /** @type{!Array<!proto.semio.model.v1.Sobject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.semio.model.v1.Sobject, 1));
};


/**
 * @param {!Array<!proto.semio.model.v1.Sobject>} value
 * @return {!proto.semio.model.v1.Layout} returns this
*/
proto.semio.model.v1.Layout.prototype.setSobjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.semio.model.v1.Sobject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.semio.model.v1.Sobject}
 */
proto.semio.model.v1.Layout.prototype.addSobjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.semio.model.v1.Sobject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.semio.model.v1.Layout} returns this
 */
proto.semio.model.v1.Layout.prototype.clearSobjectsList = function() {
  return this.setSobjectsList([]);
};


/**
 * repeated Attraction attractions = 2;
 * @return {!Array<!proto.semio.model.v1.Attraction>}
 */
proto.semio.model.v1.Layout.prototype.getAttractionsList = function() {
  return /** @type{!Array<!proto.semio.model.v1.Attraction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.semio.model.v1.Attraction, 2));
};


/**
 * @param {!Array<!proto.semio.model.v1.Attraction>} value
 * @return {!proto.semio.model.v1.Layout} returns this
*/
proto.semio.model.v1.Layout.prototype.setAttractionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.semio.model.v1.Attraction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.semio.model.v1.Attraction}
 */
proto.semio.model.v1.Layout.prototype.addAttractions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.semio.model.v1.Attraction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.semio.model.v1.Layout} returns this
 */
proto.semio.model.v1.Layout.prototype.clearAttractionsList = function() {
  return this.setAttractionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.semio.model.v1.AttractionChain.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.AttractionChain.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.AttractionChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.AttractionChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.AttractionChain.toObject = function(includeInstance, msg) {
  var f, obj = {
    attractionsList: jspb.Message.toObjectList(msg.getAttractionsList(),
    proto.semio.model.v1.Attraction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.AttractionChain}
 */
proto.semio.model.v1.AttractionChain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.AttractionChain;
  return proto.semio.model.v1.AttractionChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.AttractionChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.AttractionChain}
 */
proto.semio.model.v1.AttractionChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.Attraction;
      reader.readMessage(value,proto.semio.model.v1.Attraction.deserializeBinaryFromReader);
      msg.addAttractions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.AttractionChain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.AttractionChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.AttractionChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.AttractionChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttractionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.semio.model.v1.Attraction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Attraction attractions = 1;
 * @return {!Array<!proto.semio.model.v1.Attraction>}
 */
proto.semio.model.v1.AttractionChain.prototype.getAttractionsList = function() {
  return /** @type{!Array<!proto.semio.model.v1.Attraction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.semio.model.v1.Attraction, 1));
};


/**
 * @param {!Array<!proto.semio.model.v1.Attraction>} value
 * @return {!proto.semio.model.v1.AttractionChain} returns this
*/
proto.semio.model.v1.AttractionChain.prototype.setAttractionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.semio.model.v1.Attraction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.semio.model.v1.Attraction}
 */
proto.semio.model.v1.AttractionChain.prototype.addAttractions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.semio.model.v1.Attraction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.semio.model.v1.AttractionChain} returns this
 */
proto.semio.model.v1.AttractionChain.prototype.clearAttractionsList = function() {
  return this.setAttractionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.semio.model.v1.Choreography.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Choreography.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Choreography.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Choreography} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Choreography.toObject = function(includeInstance, msg) {
  var f, obj = {
    solitarySobjectsList: jspb.Message.toObjectList(msg.getSolitarySobjectsList(),
    proto.semio.model.v1.Sobject.toObject, includeInstance),
    attractionchainsList: jspb.Message.toObjectList(msg.getAttractionchainsList(),
    proto.semio.model.v1.AttractionChain.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Choreography}
 */
proto.semio.model.v1.Choreography.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Choreography;
  return proto.semio.model.v1.Choreography.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Choreography} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Choreography}
 */
proto.semio.model.v1.Choreography.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.Sobject;
      reader.readMessage(value,proto.semio.model.v1.Sobject.deserializeBinaryFromReader);
      msg.addSolitarySobjects(value);
      break;
    case 2:
      var value = new proto.semio.model.v1.AttractionChain;
      reader.readMessage(value,proto.semio.model.v1.AttractionChain.deserializeBinaryFromReader);
      msg.addAttractionchains(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Choreography.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Choreography.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Choreography} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Choreography.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSolitarySobjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.semio.model.v1.Sobject.serializeBinaryToWriter
    );
  }
  f = message.getAttractionchainsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.semio.model.v1.AttractionChain.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Sobject solitary_sobjects = 1;
 * @return {!Array<!proto.semio.model.v1.Sobject>}
 */
proto.semio.model.v1.Choreography.prototype.getSolitarySobjectsList = function() {
  return /** @type{!Array<!proto.semio.model.v1.Sobject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.semio.model.v1.Sobject, 1));
};


/**
 * @param {!Array<!proto.semio.model.v1.Sobject>} value
 * @return {!proto.semio.model.v1.Choreography} returns this
*/
proto.semio.model.v1.Choreography.prototype.setSolitarySobjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.semio.model.v1.Sobject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.semio.model.v1.Sobject}
 */
proto.semio.model.v1.Choreography.prototype.addSolitarySobjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.semio.model.v1.Sobject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.semio.model.v1.Choreography} returns this
 */
proto.semio.model.v1.Choreography.prototype.clearSolitarySobjectsList = function() {
  return this.setSolitarySobjectsList([]);
};


/**
 * repeated AttractionChain attractionChains = 2;
 * @return {!Array<!proto.semio.model.v1.AttractionChain>}
 */
proto.semio.model.v1.Choreography.prototype.getAttractionchainsList = function() {
  return /** @type{!Array<!proto.semio.model.v1.AttractionChain>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.semio.model.v1.AttractionChain, 2));
};


/**
 * @param {!Array<!proto.semio.model.v1.AttractionChain>} value
 * @return {!proto.semio.model.v1.Choreography} returns this
*/
proto.semio.model.v1.Choreography.prototype.setAttractionchainsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.semio.model.v1.AttractionChain=} opt_value
 * @param {number=} opt_index
 * @return {!proto.semio.model.v1.AttractionChain}
 */
proto.semio.model.v1.Choreography.prototype.addAttractionchains = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.semio.model.v1.AttractionChain, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.semio.model.v1.Choreography} returns this
 */
proto.semio.model.v1.Choreography.prototype.clearAttractionchainsList = function() {
  return this.setAttractionchainsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Element.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Element.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Element} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Element.toObject = function(includeInstance, msg) {
  var f, obj = {
    pose: (f = msg.getPose()) && proto.semio.model.v1.Pose.toObject(includeInstance, f),
    representations: (f = msg.getRepresentations()) && proto.semio.model.v1.Representations.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Element}
 */
proto.semio.model.v1.Element.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Element;
  return proto.semio.model.v1.Element.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Element} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Element}
 */
proto.semio.model.v1.Element.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.Pose;
      reader.readMessage(value,proto.semio.model.v1.Pose.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    case 2:
      var value = new proto.semio.model.v1.Representations;
      reader.readMessage(value,proto.semio.model.v1.Representations.deserializeBinaryFromReader);
      msg.setRepresentations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Element.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Element.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Element} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Element.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.semio.model.v1.Pose.serializeBinaryToWriter
    );
  }
  f = message.getRepresentations();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.semio.model.v1.Representations.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pose pose = 1;
 * @return {?proto.semio.model.v1.Pose}
 */
proto.semio.model.v1.Element.prototype.getPose = function() {
  return /** @type{?proto.semio.model.v1.Pose} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.Pose, 1));
};


/**
 * @param {?proto.semio.model.v1.Pose|undefined} value
 * @return {!proto.semio.model.v1.Element} returns this
*/
proto.semio.model.v1.Element.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Element} returns this
 */
proto.semio.model.v1.Element.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Element.prototype.hasPose = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Representations representations = 2;
 * @return {?proto.semio.model.v1.Representations}
 */
proto.semio.model.v1.Element.prototype.getRepresentations = function() {
  return /** @type{?proto.semio.model.v1.Representations} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.Representations, 2));
};


/**
 * @param {?proto.semio.model.v1.Representations|undefined} value
 * @return {!proto.semio.model.v1.Element} returns this
*/
proto.semio.model.v1.Element.prototype.setRepresentations = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Element} returns this
 */
proto.semio.model.v1.Element.prototype.clearRepresentations = function() {
  return this.setRepresentations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Element.prototype.hasRepresentations = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.semio.model.v1.Design.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Design.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Design.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Design} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Design.toObject = function(includeInstance, msg) {
  var f, obj = {
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.semio.model.v1.Element.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Design}
 */
proto.semio.model.v1.Design.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Design;
  return proto.semio.model.v1.Design.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Design} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Design}
 */
proto.semio.model.v1.Design.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.Element;
      reader.readMessage(value,proto.semio.model.v1.Element.deserializeBinaryFromReader);
      msg.addElements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Design.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Design.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Design} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Design.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.semio.model.v1.Element.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Element elements = 1;
 * @return {!Array<!proto.semio.model.v1.Element>}
 */
proto.semio.model.v1.Design.prototype.getElementsList = function() {
  return /** @type{!Array<!proto.semio.model.v1.Element>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.semio.model.v1.Element, 1));
};


/**
 * @param {!Array<!proto.semio.model.v1.Element>} value
 * @return {!proto.semio.model.v1.Design} returns this
*/
proto.semio.model.v1.Design.prototype.setElementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.semio.model.v1.Element=} opt_value
 * @param {number=} opt_index
 * @return {!proto.semio.model.v1.Element}
 */
proto.semio.model.v1.Design.prototype.addElements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.semio.model.v1.Element, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.semio.model.v1.Design} returns this
 */
proto.semio.model.v1.Design.prototype.clearElementsList = function() {
  return this.setElementsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.LayoutModification.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.LayoutModification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.LayoutModification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.LayoutModification.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextLayout: (f = msg.getContextLayout()) && proto.semio.model.v1.Layout.toObject(includeInstance, f),
    modifiedContextLayout: (f = msg.getModifiedContextLayout()) && proto.semio.model.v1.Layout.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.LayoutModification}
 */
proto.semio.model.v1.LayoutModification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.LayoutModification;
  return proto.semio.model.v1.LayoutModification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.LayoutModification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.LayoutModification}
 */
proto.semio.model.v1.LayoutModification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.Layout;
      reader.readMessage(value,proto.semio.model.v1.Layout.deserializeBinaryFromReader);
      msg.setContextLayout(value);
      break;
    case 2:
      var value = new proto.semio.model.v1.Layout;
      reader.readMessage(value,proto.semio.model.v1.Layout.deserializeBinaryFromReader);
      msg.setModifiedContextLayout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.LayoutModification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.LayoutModification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.LayoutModification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.LayoutModification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextLayout();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.semio.model.v1.Layout.serializeBinaryToWriter
    );
  }
  f = message.getModifiedContextLayout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.semio.model.v1.Layout.serializeBinaryToWriter
    );
  }
};


/**
 * optional Layout context_layout = 1;
 * @return {?proto.semio.model.v1.Layout}
 */
proto.semio.model.v1.LayoutModification.prototype.getContextLayout = function() {
  return /** @type{?proto.semio.model.v1.Layout} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.Layout, 1));
};


/**
 * @param {?proto.semio.model.v1.Layout|undefined} value
 * @return {!proto.semio.model.v1.LayoutModification} returns this
*/
proto.semio.model.v1.LayoutModification.prototype.setContextLayout = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.LayoutModification} returns this
 */
proto.semio.model.v1.LayoutModification.prototype.clearContextLayout = function() {
  return this.setContextLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.LayoutModification.prototype.hasContextLayout = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Layout modified_context_layout = 2;
 * @return {?proto.semio.model.v1.Layout}
 */
proto.semio.model.v1.LayoutModification.prototype.getModifiedContextLayout = function() {
  return /** @type{?proto.semio.model.v1.Layout} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.Layout, 2));
};


/**
 * @param {?proto.semio.model.v1.Layout|undefined} value
 * @return {!proto.semio.model.v1.LayoutModification} returns this
*/
proto.semio.model.v1.LayoutModification.prototype.setModifiedContextLayout = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.LayoutModification} returns this
 */
proto.semio.model.v1.LayoutModification.prototype.clearModifiedContextLayout = function() {
  return this.setModifiedContextLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.LayoutModification.prototype.hasModifiedContextLayout = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.LayoutModificationStrategy.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.LayoutModificationStrategy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.LayoutModificationStrategy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.LayoutModificationStrategy.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchCount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.LayoutModificationStrategy}
 */
proto.semio.model.v1.LayoutModificationStrategy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.LayoutModificationStrategy;
  return proto.semio.model.v1.LayoutModificationStrategy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.LayoutModificationStrategy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.LayoutModificationStrategy}
 */
proto.semio.model.v1.LayoutModificationStrategy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMatchCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.LayoutModificationStrategy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.LayoutModificationStrategy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.LayoutModificationStrategy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.LayoutModificationStrategy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 match_count = 1;
 * @return {number}
 */
proto.semio.model.v1.LayoutModificationStrategy.prototype.getMatchCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.semio.model.v1.LayoutModificationStrategy} returns this
 */
proto.semio.model.v1.LayoutModificationStrategy.prototype.setMatchCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.semio.model.v1.Decision.prototype.toObject = function(opt_includeInstance) {
  return proto.semio.model.v1.Decision.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.semio.model.v1.Decision} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Decision.toObject = function(includeInstance, msg) {
  var f, obj = {
    modification: (f = msg.getModification()) && proto.semio.model.v1.LayoutModification.toObject(includeInstance, f),
    strategy: (f = msg.getStrategy()) && proto.semio.model.v1.LayoutModificationStrategy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.semio.model.v1.Decision}
 */
proto.semio.model.v1.Decision.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.semio.model.v1.Decision;
  return proto.semio.model.v1.Decision.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.semio.model.v1.Decision} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.semio.model.v1.Decision}
 */
proto.semio.model.v1.Decision.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.semio.model.v1.LayoutModification;
      reader.readMessage(value,proto.semio.model.v1.LayoutModification.deserializeBinaryFromReader);
      msg.setModification(value);
      break;
    case 2:
      var value = new proto.semio.model.v1.LayoutModificationStrategy;
      reader.readMessage(value,proto.semio.model.v1.LayoutModificationStrategy.deserializeBinaryFromReader);
      msg.setStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.semio.model.v1.Decision.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.semio.model.v1.Decision.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.semio.model.v1.Decision} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.semio.model.v1.Decision.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModification();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.semio.model.v1.LayoutModification.serializeBinaryToWriter
    );
  }
  f = message.getStrategy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.semio.model.v1.LayoutModificationStrategy.serializeBinaryToWriter
    );
  }
};


/**
 * optional LayoutModification modification = 1;
 * @return {?proto.semio.model.v1.LayoutModification}
 */
proto.semio.model.v1.Decision.prototype.getModification = function() {
  return /** @type{?proto.semio.model.v1.LayoutModification} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.LayoutModification, 1));
};


/**
 * @param {?proto.semio.model.v1.LayoutModification|undefined} value
 * @return {!proto.semio.model.v1.Decision} returns this
*/
proto.semio.model.v1.Decision.prototype.setModification = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Decision} returns this
 */
proto.semio.model.v1.Decision.prototype.clearModification = function() {
  return this.setModification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Decision.prototype.hasModification = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LayoutModificationStrategy strategy = 2;
 * @return {?proto.semio.model.v1.LayoutModificationStrategy}
 */
proto.semio.model.v1.Decision.prototype.getStrategy = function() {
  return /** @type{?proto.semio.model.v1.LayoutModificationStrategy} */ (
    jspb.Message.getWrapperField(this, proto.semio.model.v1.LayoutModificationStrategy, 2));
};


/**
 * @param {?proto.semio.model.v1.LayoutModificationStrategy|undefined} value
 * @return {!proto.semio.model.v1.Decision} returns this
*/
proto.semio.model.v1.Decision.prototype.setStrategy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.semio.model.v1.Decision} returns this
 */
proto.semio.model.v1.Decision.prototype.clearStrategy = function() {
  return this.setStrategy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.semio.model.v1.Decision.prototype.hasStrategy = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.semio.model.v1);
