syntax = "proto3";

package semio.assembler.v1;

option go_package = "github.com/usalu/semio/src/packages/go/assembler/v1";
option csharp_namespace = "Semio.Assembler.V1";

import "model/v1/model.proto";

// The assembler service is responsible for assembling layouts into designs.
service AssemblerService {
  // Turn a layout into assemblies.
  rpc LayoutToAssemblies(semio.model.v1.Layout) returns (LayoutToAssembliesResponse);
  // Assemble elements from an assembly.
  rpc AssemblyToElements(AssemblyToElementsRequest) returns (AssemblyToElementsResponse);
}

message LayoutToAssembliesResponse{
  repeated semio.model.v1.Assembly assemblies = 1;
}

message AssemblyToElementsRequest {
  semio.model.v1.Assembly assembly = 1;
  repeated semio.model.v1.Sobject sobjects = 2;
  repeated semio.model.v1.Connection connections = 3;
}

message AssemblyToElementsResponse {
  repeated semio.model.v1.Prototype prototypes = 1;
  repeated semio.model.v1.Element elements = 2;
}