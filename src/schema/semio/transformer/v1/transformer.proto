syntax = "proto3";

package semio.extension.transformer.v1;

option go_package = "github.com/usalu/semio/src/packages/go/extension/transformer/v1";
option csharp_namespace = "Semio.Extension.Transformer.V1";

import "model/v1/model.proto";

// A service for transforming (rewriting) layouts (graphs).
service TransformerService {
  rpc TransformLayout(RewriteLayoutRequest) returns (semio.model.v1.Layout);
}

// A rewrite layout request is a description for layout (graph) rewrites.
message RewriteLayoutRequest {
  semio.model.v1.Layout lyt = 1;
  repeated Transformation trfs = 2;
}

enum RuleType {
    RULETYPE_MODIFICATION = 0;
    RULETYPE_STRICT = 1;
  }

message Transformation {
    semio.model.v1.Layout lhs = 1;
    semio.model.v1.Layout rhs = 2;
    semio.model.v1.RuleType rt = 3;
    // Define the way the transformation should be applied.
    oneof app{
        // Greedy will match as often as possible. This is dangerous because it can be stuck in recursion.
        bool gdy = 4;
        // Number of matches
        int32 num_mtchs = 4;
    }
}