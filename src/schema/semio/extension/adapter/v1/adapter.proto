syntax = "proto3";

package semio.extension.adapter.v1;

option go_package = "github.com/usalu/semio/src/packages/go/extension/adapter/v1";
option csharp_namespace = "Semio.Extension.Adapter.V1";

import "model/v1/model.proto";

// An adapter service is an adapter for elements to a specific platform where your elements are (parameterically) defined in.
service AdapterService {
  // Request an connection point for the connected.
  rpc RequestConnectionPoint(ConnectionPointRequest) returns (semio.model.v1.Point) {}
  // Request a prototype.
  rpc RequestPrototype(PrototypeRequest) returns (semio.model.v1.Prototype) {}
}

// Description what an adapter is adapting to.
message Adapting{
  // The platform that is adapted.
  semio.model.v1.Platform platform = 1;
}

// A connection point request requests a point from the connected (sobject).
message ConnectionPointRequest {
  // The plan of the connected (sobject).
  semio.model.v1.Plan connected_plan = 1;
  // The link of the connecting (sobject).
  semio.model.v1.Link connecting_link = 2;
}

// A prototype request requests a prototype from a plan.
message PrototypeRequest {
  // The plan for the prototype.
  semio.model.v1.Plan plan = 1;
}
