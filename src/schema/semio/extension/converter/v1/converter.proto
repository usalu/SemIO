syntax = "proto3";

package semio.extension.converter.v1;

option go_package = "github.com/usalu/semio/src/packages/go/extension/converter/v1";
option csharp_namespace = "Semio.Extension.Converter.V1";

import "model/v1/model.proto";

// A converter service can convert an element from one representation into another representation.
service ConverterService {
  rpc ConvertRepresentation(RepresentationConversionRequest) returns (semio.model.v1.Representation);
}

// Description what a converter is converting.
message Converting{
  semio.model.v1.Platform source_platform = 1;
  semio.model.v1.Platform target_platform = 2;
}

// A request for converting a represenation.
message RepresentationConversionRequest {
  semio.model.v1.Representation representation = 1;
  semio.model.v1.Platform target_platform = 2;
}