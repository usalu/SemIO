syntax = "proto3";

package semio.gateway.v1;

option go_package = "github.com/usalu/semio/src/packages/go/gateway/v1";
option csharp_namespace = "Semio.Gateway.V1";

import "model/v1/model.proto";
import "assembler/v1/assembler.proto";
import "google/api/annotations.proto";
//import "google/api/client.proto";
// import "google/api/resource.proto";
// import "google/protobuf/empty.proto";

// The gateway service is the gateway for all other apis of semio.
service GatewayService {
  //   option (google.api.default_host) = "localhost:50000";

  // Lay out a design from a layout and return a design.
  rpc LayoutDesign(semio.assembler.v1.LayoutDesignRequest) returns (semio.model.v1.Design) {
    option (google.api.http) = {
       post: "/v1/layoutdesign"
       body: "*"
     };
  }
}
