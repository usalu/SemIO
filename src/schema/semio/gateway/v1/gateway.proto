syntax = "proto3";

package semio.gateway.v1;

import "model/v1/model.proto";
// import "google/api/annotations.proto";
// import "google/api/client.proto";
// import "google/api/resource.proto";
// import "google/protobuf/empty.proto";

option go_package = "github.com/usalu/semio/src/schema/semio/gateway/v1";

// The gateway service is the gateway for all other apis of semio.
service GatewayService {
  //   option (google.api.default_host) = "localhost:50000";

  // Lay out a design from a layout and return a design.
  rpc LayoutDesign(LayoutDesignRequest) returns (semio.model.v1.Design) {
    // option (google.api.http) = {
    //   post: "v1/layout-design"
    //   body: "*"
    // };
  }
}

message LayoutDesignRequest {
  semio.model.v1.Layout layout = 1;
  string target_type = 2;
}
