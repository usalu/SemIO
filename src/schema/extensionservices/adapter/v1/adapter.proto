syntax = "proto3";

package semio.extension.adapter.v1;

import "model.proto";

// An adapter service is an adapter for elements to a specific platform where your elements are (parameterically) defined in.
service Adapter{
    // Attract the attracted to the attractor.
    rpc Attract (semio.model.v1.Attraction) returns (AttractionResponse){};
    // Request a specific representation
    rpc RequestRepresentation (RepresentationRequest) returns (semio.model.v1.Representation){};
    // Request potentially all representations
    rpc RequestRepresentations (RepresentationsRequest) returns (semio.model.v1.Representations){};
}


message AttractionResponse{
    semio.model.v1.Pose attracted_target_pose = 1;
    semio.model.v1.Point attraction_point = 2;
}

message RepresentationRequest{
    semio.model.v1.Sobject sobject = 1;
    string type = 2;
    string name = 3;
    int64 lod = 4;
}

message RepresentationsRequest{
    semio.model.v1.Sobject sobject = 1;
    repeated string types = 2;
    repeated string names = 3;
    repeated int64 lods = 4;
}