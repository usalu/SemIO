{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/PrototypeRequest",
    "definitions": {
        "PrototypeRequest": {
            "properties": {
                "sobject": {
                    "$ref": "#/definitions/semio.model.v1.Sobject",
                    "additionalProperties": true
                },
                "target_representation_platforms": {
                    "items": {
                        "enum": [
                            "PLATFORM_SEMIO",
                            0,
                            "PLATFORM_THREE",
                            1000000100,
                            "PLATFORM_SVERCHOK",
                            500000200,
                            "PLATFORM_IFCOPENSHELL",
                            1010100000,
                            "PLATFORM_CADQUERY",
                            1600100100,
                            "PLATFORM_FREECAD",
                            530100200,
                            "PLATFORM_OPENSCAD",
                            530100300,
                            "PLATFORM_JSCAD",
                            1500100400,
                            "PLATFORM_Fornjot",
                            1700000300,
                            "PLATFORM_TRUCK",
                            1500000400,
                            "PLATFORM_ENERGYPLUS",
                            1900200100,
                            "PLATFORM_OPENSTUDIO",
                            1910200101,
                            "PLATFORM_RHINO",
                            2140300000,
                            "PLATFORM_GRASSHOPPER",
                            2140300001,
                            "PLATFORM_REVIT",
                            2140300100,
                            "PLATFORM_DYNAMO",
                            2140300101
                        ]
                    },
                    "type": "array",
                    "title": "Platform",
                    "description": "Platform. Constants are encoded with pattern LICENSE [3] + OWNERTYPE [2] + OWNERID [3] + PLATFORMID [2]\r LICENSE (if possible) after https://spdx.org/licenses/: \r 0:AGPL-3.0-or-later,\r 50:GPL-3.0+,51:GPL-3.0,52:GPL-2.0+,53:GPL-2.0\r 100:LGPL-3.0-or-later,101:LGPL-3.0-only\r 150:MIT,160:Apache-2.0,\r 170:0BSD\r 190:EnergyPlus\r 214:Closed\r OWNER starting with OWNERTYPE:\r 0:INDIVIDUALS: 0:usalu,1:mrdoob,2:nortikin,3:hannobraun,4:ricosjp\r 1:COLLECTIVE: 0:ifcopenshell,1:cadquery,2:freecad,3:openscad,4:jscad\r 2:NONPROFIT: 0:buildingsmart,1:nrel\r 3:COMPANY: 0:mcneel,1:autodesk,2:nemetschek,3:esri"
                },
                "target_representation_concepts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Optional concepts for the representations. If this can't be unchieved, the default one will be picked unless the target required parameter is set to true."
                },
                "target_representation_lods": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array",
                    "description": "An optional level of detail for the target representation. If this can't be unchieved, the closest one will be picked unless the target required parameter is set to true."
                },
                "targets_required": {
                    "type": "boolean",
                    "description": "Set this to true if all of the targets must be achived."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Element Request"
        },
        "semio.model.v1.Parameter": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the parameter"
                },
                "context": {
                    "items": {
                        "$ref": "#/definitions/semio.model.v1.Scope"
                    },
                    "type": "array",
                    "description": "Optional context field to describe the context of the parameter."
                },
                "value": {
                    "$ref": "#/definitions/semio.model.v1.Value",
                    "additionalProperties": true,
                    "description": "Value of the parameter."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Parameter",
            "description": "A parameter is a (common) object that can be used as a parameter in all platforms."
        },
        "semio.model.v1.Plan": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The url of the prototype definition."
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/semio.model.v1.Parameter"
                    },
                    "type": "array",
                    "description": "Optional parameters for the prototype."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Plan",
            "description": "A plan for a prototype."
        },
        "semio.model.v1.Point": {
            "properties": {
                "x": {
                    "type": "number",
                    "description": "X coordinate."
                },
                "y": {
                    "type": "number",
                    "description": "Y coordinate"
                },
                "z": {
                    "type": "number",
                    "description": "Z coordinate"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Point",
            "description": "A 3d point with x,y,z coordinates."
        },
        "semio.model.v1.Pose": {
            "properties": {
                "point_of_view": {
                    "$ref": "#/definitions/semio.model.v1.Point",
                    "additionalProperties": true,
                    "description": "Point of view (origin) from the pose (reference frame/coordinate system)"
                },
                "view": {
                    "$ref": "#/definitions/semio.model.v1.Quaternion",
                    "additionalProperties": true,
                    "description": "View (orientation) from the pose (reference frame/coordinate system)"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Pose",
            "description": "A pose is a static reference frame/coordinate system."
        },
        "semio.model.v1.Quaternion": {
            "properties": {
                "w": {
                    "type": "number"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                },
                "z": {
                    "type": "number"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Quaternion",
            "description": "(Unit) quaternions represent (here) (rotational) orientation. It can be interpreted as the view of an object."
        },
        "semio.model.v1.Scope": {
            "properties": {
                "concept": {
                    "type": "string",
                    "description": "Concept for the scope e.g Fassade, Floor"
                },
                "order": {
                    "type": "integer",
                    "description": "Optionally define the order. Othwerwise it will be implicitly ordered by declaration order."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Scope",
            "description": "Describes the scope of a parameter."
        },
        "semio.model.v1.Sobject": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id that allows to distinguish it from other sobjects."
                },
                "pose": {
                    "$ref": "#/definitions/semio.model.v1.Pose",
                    "additionalProperties": true,
                    "description": "The (rough) pose of the element. In the layout process this will most likely be adjusted if not specified otherwise in the assembly."
                },
                "plan": {
                    "$ref": "#/definitions/semio.model.v1.Plan",
                    "additionalProperties": true,
                    "description": "The plan for the prototype."
                },
                "concepts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Concept that are relevent for the sobject."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Sobject",
            "description": "Instance information for an element."
        },
        "semio.model.v1.Value": {
            "properties": {
                "text": {
                    "type": "string"
                },
                "number": {
                    "type": "number"
                },
                "integer_number": {
                    "type": "integer"
                },
                "natural_number": {
                    "type": "integer"
                },
                "point": {
                    "$ref": "#/definitions/semio.model.v1.Point",
                    "additionalProperties": true
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Value"
        }
    }
}