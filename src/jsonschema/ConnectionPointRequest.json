{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/ConnectionPointRequest",
    "definitions": {
        "ConnectionPointRequest": {
            "properties": {
                "plan": {
                    "$ref": "#/definitions/semio.model.v1.Plan",
                    "additionalProperties": true,
                    "description": "The plan of the connected (sobject)."
                },
                "link": {
                    "$ref": "#/definitions/semio.model.v1.Link",
                    "additionalProperties": true,
                    "description": "The link to the connected (sobject)."
                },
                "simple_representation": {
                    "$ref": "#/definitions/semio.geometry.v1.Point",
                    "additionalProperties": true
                },
                "full_representation": {
                    "$ref": "#/definitions/semio.model.v1.Representation",
                    "additionalProperties": true
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Connection Point Request",
            "description": "A connection point request requests a point from the connected (sobject)."
        },
        "semio.geometry.v1.Point": {
            "properties": {
                "x": {
                    "type": "number",
                    "description": "X coordinate."
                },
                "y": {
                    "type": "number",
                    "description": "Y coordinate"
                },
                "z": {
                    "type": "number",
                    "description": "Z coordinate"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Point",
            "description": "A 3d point with x,y,z coordinates."
        },
        "semio.model.v1.Link": {
            "properties": {
                "representationProtocol": {
                    "enum": [
                        "REPRESENTATIONPROTOCOL_NONE",
                        0,
                        "REPRESENTATIONPROTOCOL_SIMPLE",
                        1,
                        "REPRESENTATIONPROTOCOL_FULL",
                        2
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Representation Protocol",
                    "description": "The representation protocol determines what type of representation the connecting will see of the connected in the connection process."
                },
                "ports": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Optional port names to connect to. The hierarchy should matter."
                },
                "bias_parameters": {
                    "items": {
                        "$ref": "#/definitions/semio.model.v1.Parameter"
                    },
                    "type": "array",
                    "description": "Optional parameters to bias the connection."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Link",
            "description": "A link defines the parameters for a connectable."
        },
        "semio.model.v1.Parameter": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the parameter"
                },
                "context": {
                    "items": {
                        "$ref": "#/definitions/semio.model.v1.Scope"
                    },
                    "type": "array",
                    "description": "Optional context field to describe the context of the parameter."
                },
                "value": {
                    "$ref": "#/definitions/semio.model.v1.Value",
                    "additionalProperties": true,
                    "description": "Value of the parameter."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Parameter",
            "description": "A parameter is a (common) object that can be used as a parameter in all platforms."
        },
        "semio.model.v1.Plan": {
            "properties": {
                "uri": {
                    "type": "string",
                    "description": "The uri of the prototype definition."
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/semio.model.v1.Parameter"
                    },
                    "type": "array",
                    "description": "Optional parameters for the prototype."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Plan",
            "description": "A plan for a prototype."
        },
        "semio.model.v1.Representation": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body depends on the serialization format of the representation.",
                    "format": "binary",
                    "binaryEncoding": "base64"
                },
                "encoding": {
                    "enum": [
                        "ENCODING_TEXT_UFT8",
                        0,
                        "ENCODING_TEXT_UFT16",
                        1,
                        "ENCODING_TEXT_UFT32",
                        2,
                        "ENCODING_TEXT_ASCII",
                        3,
                        "ENCODING_TEXT_BASE64",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Encoding",
                    "description": "Encoding of a byte array."
                },
                "file_type": {
                    "enum": [
                        "FILETYPE_NATIVE",
                        0,
                        "FILETYPE_JSON",
                        1,
                        "FILETYPE_XML",
                        2,
                        "FILETYPE_YAML",
                        3,
                        "FILETYPE_TOML",
                        4,
                        "FILETYPE_STEP",
                        5,
                        "FILETYPE_PY",
                        6,
                        "FILETYPE_C",
                        7,
                        "FILETYPE_CPP",
                        8,
                        "FILETYPE_CSHARP",
                        9,
                        "FILETYPE_GO",
                        10,
                        "FILETYPE_RUST",
                        11
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "File Type"
                },
                "platform": {
                    "enum": [
                        "PLATFORM_SEMIO",
                        0,
                        "PLATFORM_SPECKLE",
                        1600350000,
                        "PLATFORM_THREE",
                        1000000100,
                        "PLATFORM_SVERCHOK",
                        500000200,
                        "PLATFORM_IFCOPENSHELL",
                        1010100000,
                        "PLATFORM_CADQUERY",
                        1600100100,
                        "PLATFORM_FREECAD",
                        530100200,
                        "PLATFORM_OPENSCAD",
                        530100300,
                        "PLATFORM_JSCAD",
                        1500100400,
                        "PLATFORM_FORNJOT",
                        1700000300,
                        "PLATFORM_TRUCK",
                        1500000400,
                        "PLATFORM_ENERGYPLUS",
                        1900200100,
                        "PLATFORM_OPENSTUDIO",
                        1910200101,
                        "PLATFORM_RHINO",
                        2140300000,
                        "PLATFORM_GRASSHOPPER",
                        2140300001,
                        "PLATFORM_REVIT",
                        2140300100,
                        "PLATFORM_DYNAMO",
                        2140300101,
                        "PLATFORM_ARCHICAD",
                        2140300200,
                        "PLATFORM_CITYENGINE",
                        2140300300,
                        "PLATFORM_EXCEL",
                        2140300400,
                        "PLATFORM_HYPAR",
                        2140350100
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Platform",
                    "description": "Platform. Constants are encoded with pattern LICENSE [3] + OWNERTYPE [2] + OWNERID [3] + PLATFORMID [2]\r LICENSE (if possible) after https://spdx.org/licenses/: \r 0:AGPL-3.0-or-later,\r 50:GPL-3.0+,51:GPL-3.0,52:GPL-2.0+,53:GPL-2.0\r 100:LGPL-3.0-or-later,101:LGPL-3.0-only\r 150:MIT,160:Apache-2.0,\r 170:0BSD\r 190:EnergyPlus\r 214:Closed\r OWNER starting with OWNERTYPE:\r 0:INDIVIDUALS: 0:usalu,1:mrdoob,2:nortikin,3:hannobraun,4:ricosjp\r 1:COLLECTIVE: 0:ifcopenshell,1:cadquery,2:freecad,3:openscad,4:jscad\r 2:NONPROFIT: 0:buildingsmart,1:nrel\r 3:COMPANY: 0:mcneel,1:autodesk,2:nemetschek,3:esri,4:microsoft, 500:speckle,501:hypar"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the representation for humans to understand what the purpose of this representation is."
                },
                "concepts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Add a list of concepts that help filtering representations. This can be used for functional purpose (e.g. statical, energetical, ...) or for visualization purpose (e.g. volumetric,comic, , ...)."
                },
                "lod": {
                    "type": "integer",
                    "description": "Level of detail allows to further define representation details. Like name this can be used either for visualization purpose (e.g. 200 (scale 1to200)) or functional purpose (e.g level of structural detail)\r For architectural design it is recommended to choose the scale multiplier.\r For BIM you might want to choose:\r 100:Conceptual\r 200:Approximate\r 300:Precise\r 400:Fabriaction\r 500:Real"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Representation",
            "description": "A representation for an element. Basically a file with some semio specific metadata."
        },
        "semio.model.v1.Scope": {
            "properties": {
                "concept": {
                    "type": "string",
                    "description": "Concept for the scope e.g Fassade, Floor"
                },
                "order": {
                    "type": "integer",
                    "description": "Optionally define the order. Othwerwise it will be implicitly ordered by declaration order."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Scope",
            "description": "Describes the scope of a parameter."
        },
        "semio.model.v1.Value": {
            "properties": {
                "text": {
                    "type": "string"
                },
                "number": {
                    "type": "number"
                },
                "integer_number": {
                    "type": "integer"
                },
                "natural_number": {
                    "type": "integer"
                },
                "point": {
                    "$ref": "#/definitions/semio.geometry.v1.Point",
                    "additionalProperties": true
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Value"
        }
    }
}