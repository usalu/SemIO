{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/Swagger",
    "definitions": {
        "Swagger": {
            "properties": {
                "swagger": {
                    "type": "string",
                    "description": "Specifies the OpenAPI Specification version being used. It can be used by the OpenAPI UI and other clients to interpret the API listing. The value MUST be \"2.0\"."
                },
                "info": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Info",
                    "additionalProperties": true,
                    "description": "Provides metadata about the API. The metadata can be used by the clients if needed."
                },
                "host": {
                    "type": "string",
                    "description": "The host (name or ip) serving the API. This MUST be the host only and does not include the scheme nor sub-paths. It MAY include a port. If the host is not included, the host serving the documentation is to be used (including the port). The host does not support path templating."
                },
                "base_path": {
                    "type": "string",
                    "description": "The base path on which the API is served, which is relative to the host. If it is not included, the API is served directly under the host. The value MUST start with a leading slash (/). The basePath does not support path templating. Note that using `base_path` does not change the endpoint paths that are generated in the resulting OpenAPI file. If you wish to use `base_path` with relatively generated OpenAPI paths, the `base_path` prefix must be manually removed from your `google.api.http` paths and your code changed to serve the API from the `base_path`."
                },
                "schemes": {
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            0,
                            "HTTP",
                            1,
                            "HTTPS",
                            2,
                            "WS",
                            3,
                            "WSS",
                            4
                        ]
                    },
                    "type": "array",
                    "title": "Scheme",
                    "description": "Scheme describes the schemes supported by the OpenAPI Swagger and Operation objects."
                },
                "consumes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "A list of MIME types the APIs can consume. This is global to all APIs but can be overridden on specific API calls. Value MUST be as described under Mime Types."
                },
                "produces": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "A list of MIME types the APIs can produce. This is global to all APIs but can be overridden on specific API calls. Value MUST be as described under Mime Types."
                },
                "responses": {
                    "additionalProperties": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Response",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "An object to hold responses that can be used across operations. This property does not define global responses for all operations."
                },
                "security_definitions": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions",
                    "additionalProperties": true,
                    "description": "Security scheme definitions that can be used across the specification."
                },
                "security": {
                    "items": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement"
                    },
                    "type": "array",
                    "description": "A declaration of which security schemes are applied for the API as a whole. The list of values describes alternative security schemes that can be used (that is, there is a logical OR between the security requirements). Individual operations can override this definition."
                },
                "tags": {
                    "items": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Tag"
                    },
                    "type": "array",
                    "description": "A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier."
                },
                "external_docs": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation",
                    "additionalProperties": true,
                    "description": "Additional external documentation."
                },
                "extensions": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Value",
                        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of these variants. Absence of any variant indicates an error. The JSON representation for `Value` is JSON value."
                    },
                    "type": "object",
                    "description": "Custom properties that start with \"x-\" such as \"x-foo\" used to describe extra functionality that is not covered by the standard OpenAPI Specification. See: https://swagger.io/docs/specification/2-0/swagger-extensions/"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Swagger",
            "description": "`Swagger` is a representation of OpenAPI v2 specification's Swagger object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#swaggerObject Example:  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {    info: {      title: \"Echo API\";      version: \"1.0\";      description: \"\";      contact: {        name: \"gRPC-Gateway project\";        url: \"https://github.com/grpc-ecosystem/grpc-gateway\";        email: \"none@example.com\";      };      license: {        name: \"BSD 3-Clause License\";        url: \"https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE.txt\";      };    };    schemes: HTTPS;    consumes: \"application/json\";    produces: \"application/json\";  };"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Contact": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The identifying name of the contact person/organization."
                },
                "url": {
                    "type": "string",
                    "description": "The URL pointing to the contact information. MUST be in the format of a URL."
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the contact person/organization. MUST be in the format of an email address."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Contact",
            "description": "`Contact` is a representation of OpenAPI v2 specification's Contact object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#contactObject Example:  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {    info: {      ...      contact: {        name: \"gRPC-Gateway project\";        url: \"https://github.com/grpc-ecosystem/grpc-gateway\";        email: \"none@example.com\";      };      ...    };    ...  };"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A short description of the target documentation. GFM syntax can be used for rich text representation."
                },
                "url": {
                    "type": "string",
                    "description": "The URL for the target documentation. Value MUST be in the format of a URL."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "External Documentation",
            "description": "`ExternalDocumentation` is a representation of OpenAPI v2 specification's ExternalDocumentation object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#externalDocumentationObject Example:  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {    ...    external_docs: {      description: \"More about gRPC-Gateway\";      url: \"https://github.com/grpc-ecosystem/grpc-gateway\";    }    ...  };"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Header": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "`Description` is a short description of the header."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the object. The value MUST be one of \"string\", \"number\", \"integer\", or \"boolean\". The \"array\" type is not supported."
                },
                "format": {
                    "type": "string",
                    "description": "`Format` The extending format for the previously mentioned type."
                },
                "default": {
                    "type": "string",
                    "description": "`Default` Declares the value of the header that the server will use if none is provided. See: https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-6.2. Unlike JSON Schema this value MUST conform to the defined type for the header."
                },
                "pattern": {
                    "type": "string",
                    "description": "'Pattern' See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.3."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Header",
            "description": "`Header` is a representation of OpenAPI v2 specification's Header object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#headerObject"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Info": {
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title of the application."
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the application. GFM syntax can be used for rich text representation."
                },
                "terms_of_service": {
                    "type": "string",
                    "description": "The Terms of Service for the API."
                },
                "contact": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Contact",
                    "additionalProperties": true,
                    "description": "The contact information for the exposed API."
                },
                "license": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.License",
                    "additionalProperties": true,
                    "description": "The license information for the exposed API."
                },
                "version": {
                    "type": "string",
                    "description": "Provides the version of the application API (not to be confused with the specification version)."
                },
                "extensions": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Value",
                        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of these variants. Absence of any variant indicates an error. The JSON representation for `Value` is JSON value."
                    },
                    "type": "object",
                    "description": "Custom properties that start with \"x-\" such as \"x-foo\" used to describe extra functionality that is not covered by the standard OpenAPI Specification. See: https://swagger.io/docs/specification/2-0/swagger-extensions/"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Info",
            "description": "`Info` is a representation of OpenAPI v2 specification's Info object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#infoObject Example:  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {    info: {      title: \"Echo API\";      version: \"1.0\";      description: \"\";      contact: {        name: \"gRPC-Gateway project\";        url: \"https://github.com/grpc-ecosystem/grpc-gateway\";        email: \"none@example.com\";      };      license: {        name: \"BSD 3-Clause License\";        url: \"https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE.txt\";      };    };    ...  };"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema": {
            "properties": {
                "ref": {
                    "type": "string",
                    "description": "Ref is used to define an external reference to include in the message. This could be a fully qualified proto message reference, and that type must be imported into the protofile. If no message is identified, the Ref will be used verbatim in the output. For example:  `ref: \".google.protobuf.Timestamp\"`."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the schema."
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the schema."
                },
                "default": {
                    "type": "string"
                },
                "read_only": {
                    "type": "boolean"
                },
                "example": {
                    "type": "string",
                    "description": "A free-form property to include a JSON example of this field. This is copied verbatim to the output swagger.json. Quotes must be escaped. This property is the same for 2.0 and 3.0.0 https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/3.0.0.md#schemaObject  https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject"
                },
                "multiple_of": {
                    "type": "number"
                },
                "maximum": {
                    "type": "number",
                    "description": "Maximum represents an inclusive upper limit for a numeric instance. The value of MUST be a number,"
                },
                "exclusive_maximum": {
                    "type": "boolean"
                },
                "minimum": {
                    "type": "number",
                    "description": "minimum represents an inclusive lower limit for a numeric instance. The value of MUST be a number,"
                },
                "exclusive_minimum": {
                    "type": "boolean"
                },
                "max_length": {
                    "type": "string"
                },
                "min_length": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "max_items": {
                    "type": "string"
                },
                "min_items": {
                    "type": "string"
                },
                "unique_items": {
                    "type": "boolean"
                },
                "max_properties": {
                    "type": "string"
                },
                "min_properties": {
                    "type": "string"
                },
                "required": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "array": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Items in 'array' must be unique."
                },
                "type": {
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            0,
                            "ARRAY",
                            1,
                            "BOOLEAN",
                            2,
                            "INTEGER",
                            3,
                            "NULL",
                            4,
                            "NUMBER",
                            5,
                            "OBJECT",
                            6,
                            "STRING",
                            7
                        ]
                    },
                    "type": "array",
                    "title": "JSON Schema Simple Types"
                },
                "format": {
                    "type": "string",
                    "description": "`Format`"
                },
                "enum": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Items in `enum` must be unique https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.5.1"
                },
                "field_configuration": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration",
                    "additionalProperties": true,
                    "description": "Additional field level properties used when generating the OpenAPI v2 file."
                },
                "extensions": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Value",
                        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of these variants. Absence of any variant indicates an error. The JSON representation for `Value` is JSON value."
                    },
                    "type": "object",
                    "description": "Custom properties that start with \"x-\" such as \"x-foo\" used to describe extra functionality that is not covered by the standard OpenAPI Specification. See: https://swagger.io/docs/specification/2-0/swagger-extensions/"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "JSON Schema",
            "description": "`JSONSchema` represents properties from JSON Schema taken, and as used, in the OpenAPI v2 spec. This includes changes made by OpenAPI v2. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject See also: https://cswr.github.io/JsonSchema/spec/basic_types/, https://github.com/json-schema-org/json-schema-spec/blob/master/schema.json Example:  message SimpleMessage {    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {      json_schema: {        title: \"SimpleMessage\"        description: \"A simple message.\"        required: [\"id\"]      }    };    // Id represents the message identifier.    string id = 1; [        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {          description: \"The unique identifier of the simple message.\"        }];  }"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration": {
            "properties": {
                "path_param_name": {
                    "type": "string",
                    "description": "Alternative parameter name when used as path parameter. If set, this will be used as the complete parameter name when this field is used as a path parameter. Use this to avoid having auto generated path parameter names for overlapping paths."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Field Configuration",
            "description": "'FieldConfiguration' provides additional field level properties used when generating the OpenAPI v2 file. These properties are not defined by OpenAPIv2, but they are used to control the generation."
        },
        "grpc.gateway.protoc_gen_openapiv2.options.License": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The license name used for the API."
                },
                "url": {
                    "type": "string",
                    "description": "A URL to the license used for the API. MUST be in the format of a URL."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "License",
            "description": "`License` is a representation of OpenAPI v2 specification's License object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#licenseObject Example:  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {    info: {      ...      license: {        name: \"BSD 3-Clause License\";        url: \"https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE.txt\";      };      ...    };    ...  };"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Response": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "`Description` is a short description of the response. GFM syntax can be used for rich text representation."
                },
                "schema": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Schema",
                    "additionalProperties": true,
                    "description": "`Schema` optionally defines the structure of the response. If `Schema` is not provided, it means there is no content to the response."
                },
                "headers": {
                    "additionalProperties": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Header",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "`Headers` A list of headers that are sent with the response. `Header` name is expected to be a string in the canonical format of the MIME header key See: https://golang.org/pkg/net/textproto/#CanonicalMIMEHeaderKey"
                },
                "examples": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "`Examples` gives per-mimetype response examples. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#example-object"
                },
                "extensions": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Value",
                        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of these variants. Absence of any variant indicates an error. The JSON representation for `Value` is JSON value."
                    },
                    "type": "object",
                    "description": "Custom properties that start with \"x-\" such as \"x-foo\" used to describe extra functionality that is not covered by the standard OpenAPI Specification. See: https://swagger.io/docs/specification/2-0/swagger-extensions/"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Response",
            "description": "`Response` is a representation of OpenAPI v2 specification's Response object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#responseObject"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Schema": {
            "properties": {
                "json_schema": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.JSONSchema",
                    "additionalProperties": true
                },
                "discriminator": {
                    "type": "string",
                    "description": "Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the required property list. When used, the value MUST be the name of this schema or any schema that inherits it."
                },
                "read_only": {
                    "type": "boolean",
                    "description": "Relevant only for Schema \"properties\" definitions. Declares the property as \"read only\". This means that it MAY be sent as part of a response but MUST NOT be sent as part of the request. Properties marked as readOnly being true SHOULD NOT be in the required list of the defined schema. Default value is false."
                },
                "external_docs": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation",
                    "additionalProperties": true,
                    "description": "Additional external documentation for this schema."
                },
                "example": {
                    "type": "string",
                    "description": "A free-form property to include an example of an instance for this schema in JSON. This is copied verbatim to the output."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Schema",
            "description": "`Schema` is a representation of OpenAPI v2 specification's Schema object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Scopes": {
            "properties": {
                "scope": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "Maps between a name of a scope to a short description of it (as the value of the property)."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Scopes",
            "description": "`Scopes` is a representation of OpenAPI v2 specification's Scopes object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#scopesObject Lists the available scopes for an OAuth2 security scheme."
        },
        "grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions": {
            "properties": {
                "security": {
                    "additionalProperties": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "A single security scheme definition, mapping a \"name\" to the scheme it defines."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Security Definitions",
            "description": "`SecurityDefinitions` is a representation of OpenAPI v2 specification's Security Definitions object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityDefinitionsObject A declaration of the security schemes available to be used in the specification. This does not enforce the security schemes on the operations and only serves to provide the relevant details for each scheme."
        },
        "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement": {
            "properties": {
                "security_requirement": {
                    "additionalProperties": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "Each name must correspond to a security scheme which is declared in the Security Definitions. If the security scheme is of type \"oauth2\", then the value is a list of scope names required for the execution. For other security scheme types, the array MUST be empty."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Security Requirement",
            "description": "`SecurityRequirement` is a representation of OpenAPI v2 specification's Security Requirement object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityRequirementObject Lists the required security schemes to execute this operation. The object can have multiple security schemes declared in it which are all required (that is, there is a logical AND between the schemes). The name used for each property MUST correspond to a security scheme declared in the Security Definitions."
        },
        "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue": {
            "properties": {
                "scope": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Security Requirement Value",
            "description": "If the security scheme is of type \"oauth2\", then the value is a list of scope names required for the execution. For other security scheme types, the array MUST be empty."
        },
        "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme": {
            "properties": {
                "type": {
                    "enum": [
                        "TYPE_INVALID",
                        0,
                        "TYPE_BASIC",
                        1,
                        "TYPE_API_KEY",
                        2,
                        "TYPE_OAUTH2",
                        3
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Type",
                    "description": "The type of the security scheme. Valid values are \"basic\", \"apiKey\" or \"oauth2\"."
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the header or query parameter to be used. Valid for apiKey."
                },
                "in": {
                    "enum": [
                        "IN_INVALID",
                        0,
                        "IN_QUERY",
                        1,
                        "IN_HEADER",
                        2
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "In",
                    "description": "The location of the API key. Valid values are \"query\" or \"header\"."
                },
                "flow": {
                    "enum": [
                        "FLOW_INVALID",
                        0,
                        "FLOW_IMPLICIT",
                        1,
                        "FLOW_PASSWORD",
                        2,
                        "FLOW_APPLICATION",
                        3,
                        "FLOW_ACCESS_CODE",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Flow",
                    "description": "The flow used by the OAuth2 security scheme. Valid values are \"implicit\", \"password\", \"application\" or \"accessCode\"."
                },
                "authorization_url": {
                    "type": "string",
                    "description": "The authorization URL to be used for this flow. This SHOULD be in the form of a URL. Valid for oauth2/implicit and oauth2/accessCode."
                },
                "token_url": {
                    "type": "string",
                    "description": "The token URL to be used for this flow. This SHOULD be in the form of a URL. Valid for oauth2/password, oauth2/application and oauth2/accessCode."
                },
                "scopes": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Scopes",
                    "additionalProperties": true,
                    "description": "The available scopes for the OAuth2 security scheme. Valid for oauth2."
                },
                "extensions": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Value",
                        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of these variants. Absence of any variant indicates an error. The JSON representation for `Value` is JSON value."
                    },
                    "type": "object",
                    "description": "Custom properties that start with \"x-\" such as \"x-foo\" used to describe extra functionality that is not covered by the standard OpenAPI Specification. See: https://swagger.io/docs/specification/2-0/swagger-extensions/"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Security Scheme",
            "description": "`SecurityScheme` is a representation of OpenAPI v2 specification's Security Scheme object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securitySchemeObject Allows the definition of a security scheme that can be used by the operations. Supported schemes are basic authentication, an API key (either as a header or as a query parameter) and OAuth2's common flows (implicit, password, application and access code)."
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Tag": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag. Use it to allow override of the name of a global Tag object, then use that name to reference the tag throughout the OpenAPI file."
                },
                "description": {
                    "type": "string",
                    "description": "A short description for the tag. GFM syntax can be used for rich text representation."
                },
                "external_docs": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation",
                    "additionalProperties": true,
                    "description": "Additional external documentation for this tag."
                },
                "extensions": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Value",
                        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of these variants. Absence of any variant indicates an error. The JSON representation for `Value` is JSON value."
                    },
                    "type": "object",
                    "description": "Custom properties that start with \"x-\" such as \"x-foo\" used to describe extra functionality that is not covered by the standard OpenAPI Specification. See: https://swagger.io/docs/specification/2-0/swagger-extensions/"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Tag",
            "description": "`Tag` is a representation of OpenAPI v2 specification's Tag object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#tagObject"
        }
    }
}