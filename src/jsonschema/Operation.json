{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/Operation",
    "definitions": {
        "Operation": {
            "properties": {
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier."
                },
                "summary": {
                    "type": "string",
                    "description": "A short summary of what the operation does. For maximum readability in the swagger-ui, this field SHOULD be less than 120 characters."
                },
                "description": {
                    "type": "string",
                    "description": "A verbose explanation of the operation behavior. GFM syntax can be used for rich text representation."
                },
                "external_docs": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation",
                    "additionalProperties": true,
                    "description": "Additional external documentation for this operation."
                },
                "operation_id": {
                    "type": "string",
                    "description": "Unique string used to identify the operation. The id MUST be unique among all operations described in the API. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is recommended to follow common programming naming conventions."
                },
                "consumes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "A list of MIME types the operation can consume. This overrides the consumes definition at the OpenAPI Object. An empty value MAY be used to clear the global definition. Value MUST be as described under Mime Types."
                },
                "produces": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "A list of MIME types the operation can produce. This overrides the produces definition at the OpenAPI Object. An empty value MAY be used to clear the global definition. Value MUST be as described under Mime Types."
                },
                "responses": {
                    "additionalProperties": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Response",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "The list of possible responses as they are returned from executing this operation."
                },
                "schemes": {
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            0,
                            "HTTP",
                            1,
                            "HTTPS",
                            2,
                            "WS",
                            3,
                            "WSS",
                            4
                        ]
                    },
                    "type": "array",
                    "title": "Scheme",
                    "description": "Scheme describes the schemes supported by the OpenAPI Swagger and Operation objects."
                },
                "deprecated": {
                    "type": "boolean",
                    "description": "Declares this operation to be deprecated. Usage of the declared operation should be refrained. Default value is false."
                },
                "security": {
                    "items": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement"
                    },
                    "type": "array",
                    "description": "A declaration of which security schemes are applied for this operation. The list of values describes alternative security schemes that can be used (that is, there is a logical OR between the security requirements). This definition overrides any declared top-level security. To remove a top-level security declaration, an empty array can be used."
                },
                "extensions": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Value",
                        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of these variants. Absence of any variant indicates an error. The JSON representation for `Value` is JSON value."
                    },
                    "type": "object",
                    "description": "Custom properties that start with \"x-\" such as \"x-foo\" used to describe extra functionality that is not covered by the standard OpenAPI Specification. See: https://swagger.io/docs/specification/2-0/swagger-extensions/"
                },
                "parameters": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Parameters",
                    "additionalProperties": true,
                    "description": "Custom parameters such as HTTP request headers. See: https://swagger.io/docs/specification/2-0/describing-parameters/ and https://swagger.io/specification/v2/#parameter-object."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Operation",
            "description": "`Operation` is a representation of OpenAPI v2 specification's Operation object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#operationObject Example:  service EchoService {    rpc Echo(SimpleMessage) returns (SimpleMessage) {      option (google.api.http) = {        get: \"/v1/example/echo/{id}\"      };      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {        summary: \"Get a message.\";        operation_id: \"getMessage\";        tags: \"echo\";        responses: {          key: \"200\"            value: {            description: \"OK\";          }        }      };    }  }"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A short description of the target documentation. GFM syntax can be used for rich text representation."
                },
                "url": {
                    "type": "string",
                    "description": "The URL for the target documentation. Value MUST be in the format of a URL."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "External Documentation",
            "description": "`ExternalDocumentation` is a representation of OpenAPI v2 specification's ExternalDocumentation object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#externalDocumentationObject Example:  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {    ...    external_docs: {      description: \"More about gRPC-Gateway\";      url: \"https://github.com/grpc-ecosystem/grpc-gateway\";    }    ...  };"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Header": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "`Description` is a short description of the header."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the object. The value MUST be one of \"string\", \"number\", \"integer\", or \"boolean\". The \"array\" type is not supported."
                },
                "format": {
                    "type": "string",
                    "description": "`Format` The extending format for the previously mentioned type."
                },
                "default": {
                    "type": "string",
                    "description": "`Default` Declares the value of the header that the server will use if none is provided. See: https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-6.2. Unlike JSON Schema this value MUST conform to the defined type for the header."
                },
                "pattern": {
                    "type": "string",
                    "description": "'Pattern' See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.3."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Header",
            "description": "`Header` is a representation of OpenAPI v2 specification's Header object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#headerObject"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.HeaderParameter": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "`Name` is the header name."
                },
                "description": {
                    "type": "string",
                    "description": "`Description` is a short description of the header."
                },
                "type": {
                    "enum": [
                        "UNKNOWN",
                        0,
                        "STRING",
                        1,
                        "NUMBER",
                        2,
                        "INTEGER",
                        3,
                        "BOOLEAN",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Type",
                    "description": "`Type` is a a supported HTTP header type. See https://swagger.io/specification/v2/#parameterType."
                },
                "format": {
                    "type": "string",
                    "description": "`Format` The extending format for the previously mentioned type."
                },
                "required": {
                    "type": "boolean",
                    "description": "`Required` indicates if the header is optional"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Header Parameter",
            "description": "`HeaderParameter` a HTTP header parameter. See: https://swagger.io/specification/v2/#parameter-object"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema": {
            "properties": {
                "ref": {
                    "type": "string",
                    "description": "Ref is used to define an external reference to include in the message. This could be a fully qualified proto message reference, and that type must be imported into the protofile. If no message is identified, the Ref will be used verbatim in the output. For example:  `ref: \".google.protobuf.Timestamp\"`."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the schema."
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the schema."
                },
                "default": {
                    "type": "string"
                },
                "read_only": {
                    "type": "boolean"
                },
                "example": {
                    "type": "string",
                    "description": "A free-form property to include a JSON example of this field. This is copied verbatim to the output swagger.json. Quotes must be escaped. This property is the same for 2.0 and 3.0.0 https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/3.0.0.md#schemaObject  https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject"
                },
                "multiple_of": {
                    "type": "number"
                },
                "maximum": {
                    "type": "number",
                    "description": "Maximum represents an inclusive upper limit for a numeric instance. The value of MUST be a number,"
                },
                "exclusive_maximum": {
                    "type": "boolean"
                },
                "minimum": {
                    "type": "number",
                    "description": "minimum represents an inclusive lower limit for a numeric instance. The value of MUST be a number,"
                },
                "exclusive_minimum": {
                    "type": "boolean"
                },
                "max_length": {
                    "type": "string"
                },
                "min_length": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "max_items": {
                    "type": "string"
                },
                "min_items": {
                    "type": "string"
                },
                "unique_items": {
                    "type": "boolean"
                },
                "max_properties": {
                    "type": "string"
                },
                "min_properties": {
                    "type": "string"
                },
                "required": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "array": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Items in 'array' must be unique."
                },
                "type": {
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            0,
                            "ARRAY",
                            1,
                            "BOOLEAN",
                            2,
                            "INTEGER",
                            3,
                            "NULL",
                            4,
                            "NUMBER",
                            5,
                            "OBJECT",
                            6,
                            "STRING",
                            7
                        ]
                    },
                    "type": "array",
                    "title": "JSON Schema Simple Types"
                },
                "format": {
                    "type": "string",
                    "description": "`Format`"
                },
                "enum": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Items in `enum` must be unique https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.5.1"
                },
                "field_configuration": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration",
                    "additionalProperties": true,
                    "description": "Additional field level properties used when generating the OpenAPI v2 file."
                },
                "extensions": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Value",
                        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of these variants. Absence of any variant indicates an error. The JSON representation for `Value` is JSON value."
                    },
                    "type": "object",
                    "description": "Custom properties that start with \"x-\" such as \"x-foo\" used to describe extra functionality that is not covered by the standard OpenAPI Specification. See: https://swagger.io/docs/specification/2-0/swagger-extensions/"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "JSON Schema",
            "description": "`JSONSchema` represents properties from JSON Schema taken, and as used, in the OpenAPI v2 spec. This includes changes made by OpenAPI v2. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject See also: https://cswr.github.io/JsonSchema/spec/basic_types/, https://github.com/json-schema-org/json-schema-spec/blob/master/schema.json Example:  message SimpleMessage {    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {      json_schema: {        title: \"SimpleMessage\"        description: \"A simple message.\"        required: [\"id\"]      }    };    // Id represents the message identifier.    string id = 1; [        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {          description: \"The unique identifier of the simple message.\"        }];  }"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration": {
            "properties": {
                "path_param_name": {
                    "type": "string",
                    "description": "Alternative parameter name when used as path parameter. If set, this will be used as the complete parameter name when this field is used as a path parameter. Use this to avoid having auto generated path parameter names for overlapping paths."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Field Configuration",
            "description": "'FieldConfiguration' provides additional field level properties used when generating the OpenAPI v2 file. These properties are not defined by OpenAPIv2, but they are used to control the generation."
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Parameters": {
            "properties": {
                "headers": {
                    "items": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.HeaderParameter"
                    },
                    "type": "array",
                    "description": "`Headers` is one or more HTTP header parameter. See: https://swagger.io/docs/specification/2-0/describing-parameters/#header-parameters"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Parameters",
            "description": "`Parameters` is a representation of OpenAPI v2 specification's parameters object. Note: This technically breaks compatibility with the OpenAPI 2 definition structure as we only allow header parameters to be set here since we do not want users specifying custom non-header parameters beyond those inferred from the Protobuf schema. See: https://swagger.io/specification/v2/#parameter-object"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Response": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "`Description` is a short description of the response. GFM syntax can be used for rich text representation."
                },
                "schema": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Schema",
                    "additionalProperties": true,
                    "description": "`Schema` optionally defines the structure of the response. If `Schema` is not provided, it means there is no content to the response."
                },
                "headers": {
                    "additionalProperties": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.Header",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "`Headers` A list of headers that are sent with the response. `Header` name is expected to be a string in the canonical format of the MIME header key See: https://golang.org/pkg/net/textproto/#CanonicalMIMEHeaderKey"
                },
                "examples": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "`Examples` gives per-mimetype response examples. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#example-object"
                },
                "extensions": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Value",
                        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of these variants. Absence of any variant indicates an error. The JSON representation for `Value` is JSON value."
                    },
                    "type": "object",
                    "description": "Custom properties that start with \"x-\" such as \"x-foo\" used to describe extra functionality that is not covered by the standard OpenAPI Specification. See: https://swagger.io/docs/specification/2-0/swagger-extensions/"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Response",
            "description": "`Response` is a representation of OpenAPI v2 specification's Response object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#responseObject"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.Schema": {
            "properties": {
                "json_schema": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.JSONSchema",
                    "additionalProperties": true
                },
                "discriminator": {
                    "type": "string",
                    "description": "Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the required property list. When used, the value MUST be the name of this schema or any schema that inherits it."
                },
                "read_only": {
                    "type": "boolean",
                    "description": "Relevant only for Schema \"properties\" definitions. Declares the property as \"read only\". This means that it MAY be sent as part of a response but MUST NOT be sent as part of the request. Properties marked as readOnly being true SHOULD NOT be in the required list of the defined schema. Default value is false."
                },
                "external_docs": {
                    "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation",
                    "additionalProperties": true,
                    "description": "Additional external documentation for this schema."
                },
                "example": {
                    "type": "string",
                    "description": "A free-form property to include an example of an instance for this schema in JSON. This is copied verbatim to the output."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Schema",
            "description": "`Schema` is a representation of OpenAPI v2 specification's Schema object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject"
        },
        "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement": {
            "properties": {
                "security_requirement": {
                    "additionalProperties": {
                        "$ref": "#/definitions/grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "Each name must correspond to a security scheme which is declared in the Security Definitions. If the security scheme is of type \"oauth2\", then the value is a list of scope names required for the execution. For other security scheme types, the array MUST be empty."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Security Requirement",
            "description": "`SecurityRequirement` is a representation of OpenAPI v2 specification's Security Requirement object. See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityRequirementObject Lists the required security schemes to execute this operation. The object can have multiple security schemes declared in it which are all required (that is, there is a logical AND between the schemes). The name used for each property MUST correspond to a security scheme declared in the Security Definitions."
        },
        "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue": {
            "properties": {
                "scope": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Security Requirement Value",
            "description": "If the security scheme is of type \"oauth2\", then the value is a list of scope names required for the execution. For other security scheme types, the array MUST be empty."
        }
    }
}