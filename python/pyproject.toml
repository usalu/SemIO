[tool.poetry]
name = "semio"
version = "2.0.0"
description = "Next gen design tool. Collaborativ, scalable and cross-platform. Promised."
authors = ["Ueli Saluz <usaluz@posteo.de>"]
maintainers = ["Ueli Saluz <usaluz@posteo.de>"]
license = "LGPL-3.0-or-later"
repository = "https://github.com/usalu/semio"
homepage = "https://usalu.github.io/semio"

[tool.poetry.dependencies]
python = "^3.12"
sqlalchemy = "^2.0.23"
graphene = "^3.3"
flask = "^3.0.0"
graphql-server = { extras = ["flask"], version = "^3.0.0b7" }
graphene-sqlalchemy = { version = "^3.0.0rc1", allow-prereleases = true }
setuptools = "^69.0.2"                                                    # hidden dependency of graphene-sqlalchemy because of import pkg_resources
marshmallow-sqlalchemy = "^0.29.0"
pydantic = "^1"
graphene-pydantic = "^0.4.2"
pint = "^0.23"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-timeout = "^2.2.0"
deepdiff = "^6.7.1"
pytest-cov = "^4.1.0"

[tool.poetry.group.dev.dependencies]
black = "^23.11.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
semio = "semio:main"

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "def __str__",
    "def client__str__",

    "raise AssertionError",
    "raise NotImplementedError",
    "raise InvalidDatabase",
    "raise InvalidBackend",

    "if __name__ == .__main__.:",

    "@(abc\\.)?abstractmethod",
]

ignore_errors = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    isolated_build = true

    [testenv]
    skip_install = true
    allowlist_externals = poetry
    commands_pre =
        poetry install
    commands =
        poetry run pytest --cov --cov-report coverage_html_report --import-mode importlib
"""
