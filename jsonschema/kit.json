{
    "$defs": {
        "Author": {
            "description": "\ud83d\udcd1 The output of an author.",
            "properties": {
                "name": {
                    "description": "\ud83d\udcdb The name of the author.",
                    "maxLength": 64,
                    "title": "Name",
                    "type": "string"
                },
                "email": {
                    "description": "\ud83d\udce7 The email of the author.",
                    "maxLength": 128,
                    "title": "Email",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "email"
            ],
            "title": "Author",
            "type": "object"
        },
        "Connection": {
            "description": "\ud83d\udd87\ufe0f A bidirectional connection between two pieces of a design.",
            "properties": {
                "rotation": {
                    "default": 0,
                    "description": "\ud83d\udd04 The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
                    "exclusiveMaximum": 360.0,
                    "minimum": 0.0,
                    "title": "Rotation",
                    "type": "number"
                },
                "tilt": {
                    "default": 0,
                    "description": "\u2197\ufe0f The optional horizontal tilt perpendicular to the port direction (applied after rotation) between the connected and the connecting piece in degrees.",
                    "exclusiveMaximum": 360.0,
                    "minimum": 0.0,
                    "title": "Tilt",
                    "type": "number"
                },
                "gap": {
                    "default": 0,
                    "description": "\u2195\ufe0f The optional longitudinal gap (applied after rotation and tilt in port direction) between the connected and the connecting piece. ",
                    "title": "Gap",
                    "type": "number"
                },
                "shift": {
                    "default": 0,
                    "description": "\u2194\ufe0f The optional lateral shift (applied after rotation and tilt in the plane) between the connected and the connecting piece..",
                    "title": "Shift",
                    "type": "number"
                },
                "connected": {
                    "$ref": "#/$defs/Side",
                    "description": "\ud83e\uddf2 The connected side of the connection."
                },
                "connecting": {
                    "$ref": "#/$defs/Side",
                    "description": "\ud83e\uddf2 The connecting side of the connection."
                }
            },
            "required": [
                "connected",
                "connecting"
            ],
            "title": "Connection",
            "type": "object"
        },
        "Design": {
            "description": "\ud83c\udfd9\ufe0f A design is a collection of pieces that are connected.",
            "properties": {
                "name": {
                    "description": "\ud83d\udcdb The name of the design.",
                    "maxLength": 64,
                    "title": "Name",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "description": "\ud83d\udcac The description of the design.",
                    "maxLength": 4096,
                    "title": "Description",
                    "type": "string"
                },
                "icon": {
                    "default": "",
                    "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB. The image must be at least 256x256 pixels and smaller than 1 MB.",
                    "maxLength": 1024,
                    "title": "Icon",
                    "type": "string"
                },
                "image": {
                    "default": "",
                    "description": "\ud83d\uddbc\ufe0f The optional url to the image of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
                    "maxLength": 1024,
                    "title": "Image",
                    "type": "string"
                },
                "variant": {
                    "default": "",
                    "description": "\ud83d\udd00 The optional variant of the design. No variant means the default variant.",
                    "maxLength": 64,
                    "title": "Variant",
                    "type": "string"
                },
                "view": {
                    "default": "",
                    "description": "\ud83e\udd7d The optional view of the design. No view means the default view.",
                    "maxLength": 64,
                    "title": "View",
                    "type": "string"
                },
                "unit": {
                    "default": "",
                    "description": "\ud83d\udccf The unit of the design.",
                    "maxLength": 64,
                    "title": "Unit",
                    "type": "string"
                },
                "createdAt": {
                    "description": "\ud83d\udd52 The creation date of the design.",
                    "format": "date-time",
                    "title": "Createdat",
                    "type": "string"
                },
                "lastUpdateAt": {
                    "description": "\ud83d\udd52 The last update date of the design.",
                    "format": "date-time",
                    "title": "Lastupdateat",
                    "type": "string"
                },
                "pieces": {
                    "items": {
                        "$ref": "#/$defs/Piece"
                    },
                    "title": "Pieces",
                    "type": "array"
                },
                "connections": {
                    "items": {
                        "$ref": "#/$defs/Connection"
                    },
                    "title": "Connections",
                    "type": "array"
                },
                "qualities": {
                    "items": {
                        "$ref": "#/$defs/Quality"
                    },
                    "title": "Qualities",
                    "type": "array"
                },
                "authors": {
                    "items": {
                        "$ref": "#/$defs/Author"
                    },
                    "title": "Authors",
                    "type": "array"
                }
            },
            "required": [
                "name"
            ],
            "title": "Design",
            "type": "object"
        },
        "DiagramPoint": {
            "description": "\ud83d\udcfa A 2d-point (xy) of integers in screen coordinate system.",
            "properties": {
                "x": {
                    "description": "\ud83c\udfc1 The x-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon.",
                    "title": "X",
                    "type": "number"
                },
                "y": {
                    "description": "\ud83c\udfc1 The y-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon.",
                    "title": "Y",
                    "type": "number"
                }
            },
            "required": [
                "x",
                "y"
            ],
            "title": "DiagramPoint",
            "type": "object"
        },
        "Locator": {
            "description": "\ud83d\uddfa\ufe0f A locator is meta-data for grouping ports.",
            "properties": {
                "group": {
                    "description": "\ud83d\udc6a The group of the locator.",
                    "maxLength": 64,
                    "title": "Group",
                    "type": "string"
                },
                "subgroup": {
                    "default": "",
                    "description": "\ud83d\udccc The optional sub-group of the locator. No sub-group means true.",
                    "maxLength": 64,
                    "title": "Subgroup",
                    "type": "string"
                }
            },
            "required": [
                "group"
            ],
            "title": "Locator",
            "type": "object"
        },
        "PieceId": {
            "description": "\ud83e\udeaa The props to identify the piece within the parent design.",
            "properties": {
                "id_": {
                    "default": "",
                    "description": "\ud83c\udd94 The id of the piece.",
                    "maxLength": 128,
                    "title": "Id ",
                    "type": "string"
                }
            },
            "title": "PieceId",
            "type": "object"
        },
        "Piece": {
            "description": "\u2b55 A piece is a 3d-instance of a type in a design.",
            "properties": {
                "id_": {
                    "default": "",
                    "description": "\ud83c\udd94 The id of the piece.",
                    "maxLength": 128,
                    "title": "Id ",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/$defs/TypeId",
                    "description": "\ud83e\udde9 The type of the piece."
                },
                "plane": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Plane"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "\u25f3 The optional plane of the piece. When pieces are connected only one piece can have a plane."
                },
                "center": {
                    "$ref": "#/$defs/DiagramPoint",
                    "description": "\ud83d\udcfa The optional center of the piece in the diagram. When pieces are connected only one piece can have a center."
                }
            },
            "required": [
                "type",
                "center"
            ],
            "title": "Piece",
            "type": "object"
        },
        "Plane": {
            "description": "\u25f3 A plane is an origin (point) and an orientation (x-axis and y-axis).",
            "properties": {
                "origin": {
                    "$ref": "#/$defs/Point",
                    "description": "\u2331 The origin of the plane."
                },
                "xAxis": {
                    "$ref": "#/$defs/Vector",
                    "description": "\u27a1\ufe0f The x-axis of the plane."
                },
                "yAxis": {
                    "$ref": "#/$defs/Vector",
                    "description": "\u27a1\ufe0f The y-axis of the plane."
                }
            },
            "required": [
                "origin",
                "xAxis",
                "yAxis"
            ],
            "title": "Plane",
            "type": "object"
        },
        "Point": {
            "description": "\u2716\ufe0f A 3d-point (xyz) of floating point numbers.",
            "properties": {
                "x": {
                    "description": "\ud83c\udf9a\ufe0f The x-coordinate of the point.",
                    "title": "X",
                    "type": "number"
                },
                "y": {
                    "description": "\ud83c\udf9a\ufe0f The y-coordinate of the point.",
                    "title": "Y",
                    "type": "number"
                },
                "z": {
                    "description": "\ud83c\udf9a\ufe0f The z-coordinate of the point.",
                    "title": "Z",
                    "type": "number"
                }
            },
            "required": [
                "x",
                "y",
                "z"
            ],
            "title": "Point",
            "type": "object"
        },
        "PortId": {
            "description": "\ud83e\udeaa The props to identify the port within the parent type.",
            "properties": {
                "id_": {
                    "default": "",
                    "description": "\ud83c\udd94 The id of the port.",
                    "maxLength": 128,
                    "title": "Id ",
                    "type": "string"
                }
            },
            "title": "PortId",
            "type": "object"
        },
        "Port": {
            "description": "\ud83d\udd0c A port is a connection point (with a direction) of a type.",
            "properties": {
                "id_": {
                    "default": "",
                    "description": "\ud83c\udd94 The id of the port.",
                    "maxLength": 128,
                    "title": "Id ",
                    "type": "string"
                },
                "point": {
                    "$ref": "#/$defs/Point",
                    "description": "\u2716\ufe0f The connection point of the port that is attracted to another connection point."
                },
                "direction": {
                    "$ref": "#/$defs/Vector",
                    "description": "\u27a1\ufe0f The direction of the port. When another piece connects the direction of the other port is flipped and then the pieces are aligned."
                },
                "locators": {
                    "description": "\ud83d\uddfa\ufe0f The locators of the port.",
                    "items": {
                        "$ref": "#/$defs/Locator"
                    },
                    "title": "Locators",
                    "type": "array"
                }
            },
            "required": [
                "point",
                "direction"
            ],
            "title": "Port",
            "type": "object"
        },
        "Quality": {
            "description": "\u2197\ufe0f The output of a quality.",
            "properties": {
                "name": {
                    "description": "\ud83d\udccf The name of the quality.",
                    "maxLength": 64,
                    "title": "Name",
                    "type": "string"
                },
                "value": {
                    "default": "",
                    "description": "\ud83d\udccf The optional value [ text | url ] of the quality. No value is equivalent to true for the name.",
                    "maxLength": 64,
                    "title": "Value",
                    "type": "string"
                },
                "unit": {
                    "default": "",
                    "description": "\ud83d\udccf The optional unit of the value of the quality.",
                    "maxLength": 64,
                    "title": "Unit",
                    "type": "string"
                },
                "definition": {
                    "default": "",
                    "description": "\ud83d\udccf The optional definition [ text | url ] of the quality.",
                    "maxLength": 4096,
                    "title": "Definition",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "title": "Quality",
            "type": "object"
        },
        "Representation": {
            "description": "\ud83d\udcbe A representation is a link to a resource that describes a type for a certain level of detail and tags.",
            "properties": {
                "mime": {
                    "description": "\u2709\ufe0f The Multipurpose Internet Mail Extensions (MIME) type of the content of the resource of the representation.",
                    "maxLength": 64,
                    "title": "Mime",
                    "type": "string"
                },
                "lod": {
                    "description": "\ud83d\udd0d The optional Level of Detail/Development/Design (LoD) of the representation. No lod means the default lod.",
                    "maxLength": 64,
                    "title": "Lod",
                    "type": "string"
                },
                "tags": {
                    "description": "\ud83c\udff7\ufe0f The optional tags to group representations. No tags means default.",
                    "items": {
                        "type": "string"
                    },
                    "title": "Tags",
                    "type": "array"
                },
                "url": {
                    "description": "\ud83d\udd17 The Unique Resource Locator (URL) to the resource of the representation.",
                    "maxLength": 1024,
                    "title": "Url",
                    "type": "string"
                }
            },
            "required": [
                "mime",
                "lod",
                "url"
            ],
            "title": "Representation",
            "type": "object"
        },
        "Side": {
            "description": "\ud83e\uddf1 A side of a piece in a connection.",
            "properties": {
                "piece": {
                    "$ref": "#/$defs/PieceId"
                },
                "port": {
                    "$ref": "#/$defs/PortId"
                }
            },
            "required": [
                "piece",
                "port"
            ],
            "title": "Side",
            "type": "object"
        },
        "TypeId": {
            "description": "\ud83e\udeaa The props to identify the type.",
            "properties": {
                "name": {
                    "description": "\ud83d\udcdb The name of the type.",
                    "maxLength": 64,
                    "title": "Name",
                    "type": "string"
                },
                "variant": {
                    "default": "",
                    "description": "\ud83d\udd00 The optional variant of the type. No variant means the default variant.",
                    "maxLength": 64,
                    "title": "Variant",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "title": "TypeId",
            "type": "object"
        },
        "Type": {
            "description": "\ud83e\udde9 A type is a reusable element that can be connected with other types over ports.",
            "properties": {
                "name": {
                    "description": "\ud83d\udcdb The name of the type.",
                    "maxLength": 64,
                    "title": "Name",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "description": "\ud83d\udcac The description of the type.",
                    "maxLength": 4096,
                    "title": "Description",
                    "type": "string"
                },
                "icon": {
                    "default": "",
                    "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
                    "maxLength": 1024,
                    "title": "Icon",
                    "type": "string"
                },
                "image": {
                    "default": "",
                    "description": "\ud83d\uddbc\ufe0f The optional url to the image of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
                    "maxLength": 1024,
                    "title": "Image",
                    "type": "string"
                },
                "variant": {
                    "default": "",
                    "description": "\ud83d\udd00 The optional variant of the type. No variant means the default variant.",
                    "maxLength": 64,
                    "title": "Variant",
                    "type": "string"
                },
                "unit": {
                    "default": "",
                    "description": "\u24c2\ufe0f The length unit of the point and the direction of the ports of the type.",
                    "maxLength": 64,
                    "title": "Unit",
                    "type": "string"
                },
                "createdAt": {
                    "description": "\ud83d\udd52 The creation date of the type.",
                    "format": "date-time",
                    "title": "Createdat",
                    "type": "string"
                },
                "lastUpdateAt": {
                    "description": "\ud83d\udd52 The last update date of the type.",
                    "format": "date-time",
                    "title": "Lastupdateat",
                    "type": "string"
                },
                "representations": {
                    "items": {
                        "$ref": "#/$defs/Representation"
                    },
                    "title": "Representations",
                    "type": "array"
                },
                "ports": {
                    "items": {
                        "$ref": "#/$defs/Port"
                    },
                    "title": "Ports",
                    "type": "array"
                },
                "qualities": {
                    "items": {
                        "$ref": "#/$defs/Quality"
                    },
                    "title": "Qualities",
                    "type": "array"
                },
                "authors": {
                    "items": {
                        "$ref": "#/$defs/Author"
                    },
                    "title": "Authors",
                    "type": "array"
                }
            },
            "required": [
                "name"
            ],
            "title": "Type",
            "type": "object"
        },
        "Vector": {
            "description": "\u27a1\ufe0f A 3d-vector (xyz) of floating point numbers.",
            "properties": {
                "x": {
                    "description": "\ud83c\udf9a\ufe0f The x-coordinate of the vector.",
                    "title": "X",
                    "type": "number"
                },
                "y": {
                    "description": "\ud83c\udf9a\ufe0f The y-coordinate of the vector.",
                    "title": "Y",
                    "type": "number"
                },
                "z": {
                    "description": "\ud83c\udf9a\ufe0f The z-coordinate of the vector.",
                    "title": "Z",
                    "type": "number"
                }
            },
            "required": [
                "x",
                "y",
                "z"
            ],
            "title": "Vector",
            "type": "object"
        }
    },
    "description": "\u2197\ufe0f The output of a kit.",
    "properties": {
        "uri": {
            "description": "\ud83c\udd94 The uri of the kit.",
            "maxLength": 4096,
            "title": "Uri",
            "type": "string"
        },
        "name": {
            "description": "\ud83d\udcdb The name of the kit.",
            "maxLength": 64,
            "title": "Name",
            "type": "string"
        },
        "description": {
            "default": "",
            "description": "\ud83d\udcac The description of the kit.",
            "maxLength": 4096,
            "title": "Description",
            "type": "string"
        },
        "icon": {
            "default": "",
            "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB. kit.",
            "maxLength": 1024,
            "title": "Icon",
            "type": "string"
        },
        "image": {
            "default": "",
            "description": "\ud83d\uddbc\ufe0f The optional url to the image of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
            "maxLength": 1024,
            "title": "Image",
            "type": "string"
        },
        "preview": {
            "default": "",
            "description": "\ud83d\udd2e The optional url of the preview image of the kit. The url must point to a landscape image [ png | jpg | svg ] which will be cropped by a 16x9 rectangle. The image must be at least 1920x1080 pixels and smaller than 20 MB.",
            "maxLength": 1024,
            "title": "Preview",
            "type": "string"
        },
        "version": {
            "default": "",
            "description": "\ud83d\udd00 The optional version of the kit. No version means the latest version.",
            "maxLength": 64,
            "title": "Version",
            "type": "string"
        },
        "remote": {
            "default": "",
            "description": "\u2601\ufe0f The optional Unique Resource Locator (URL) where to fetch the kit remotely.",
            "maxLength": 1024,
            "title": "Remote",
            "type": "string"
        },
        "homepage": {
            "default": "",
            "description": "\ud83c\udfe0 The optional url of the homepage of the kit.",
            "maxLength": 1024,
            "title": "Homepage",
            "type": "string"
        },
        "license": {
            "default": "",
            "description": "\u2696\ufe0f The optional license [ spdx id | url ] of the kit.",
            "maxLength": 1024,
            "title": "License",
            "type": "string"
        },
        "createdAt": {
            "description": "\ud83d\udd52 The creation date of the kit.",
            "format": "date-time",
            "title": "Createdat",
            "type": "string"
        },
        "lastUpdateAt": {
            "description": "\ud83d\udd52 The last update date of the kit.",
            "format": "date-time",
            "title": "Lastupdateat",
            "type": "string"
        },
        "types": {
            "description": "\ud83e\udde9 The types of the kit.",
            "items": {
                "$ref": "#/$defs/Type"
            },
            "title": "Types",
            "type": "array"
        },
        "designs": {
            "description": "\ud83c\udfd9\ufe0f The designs of the kit.",
            "items": {
                "$ref": "#/$defs/Design"
            },
            "title": "Designs",
            "type": "array"
        }
    },
    "required": [
        "uri",
        "name"
    ],
    "title": "Kit",
    "type": "object"
}