//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Semio.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Semio.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mutation AddFormationToLocalKit($directory: String!, $formation: FormationInput!) {
        ///  addFormationToLocalKit(directory: $directory, formationInput: $formation) {
        ///    formations {
        ///        name
        ///        explanation
        ///        icon
        ///        pieces {
        ///          id
        ///          type {
        ///            name
        ///            qualities {
        ///              name
        ///              value
        ///              unit
        ///            }
        ///          }
        ///        }
        ///        attractions {
        ///          attracting {
        ///            piece {
        ///              id
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string addFormationToLocalKit {
            get {
                return ResourceManager.GetString("addFormationToLocalKit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mutation AddTypeToLocalKit($directory: String!, $type: TypeInput!) {
        ///  addTypeToLocalKit(directory: $directory, typeInput: $type) {
        ///    type {
        ///      name
        ///      representations {
        ///        url
        ///        lod
        ///        tags
        ///      }
        ///      ports {
        ///        plane {
        ///          origin {
        ///            x
        ///            y
        ///            z
        ///          }
        ///          xAxis {
        ///            x
        ///            y
        ///            z
        ///          }
        ///          yAxis {
        ///            x
        ///            y
        ///            z
        ///          }
        ///        }
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string addTypeToLocalKit {
            get {
                return ResourceManager.GetString("addTypeToLocalKit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mutation CreateLocalKit($directory: String!, $kit: KitInput!) {
        ///  createLocalKit(directory: $directory, kitInput: $kit) {
        ///    kit {
        ///      name
        ///      explanation
        ///      icon
        ///      url
        ///      types {
        ///        name
        ///        representations {
        ///          url
        ///          lod
        ///          tags
        ///        }
        ///        ports {
        ///          plane {
        ///            origin {
        ///              x
        ///              y
        ///              z
        ///            }
        ///            xAxis {
        ///              x
        ///              y
        ///              z
        ///            }        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string createLocalKit {
            get {
                return ResourceManager.GetString("createLocalKit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mutation DeleteLocalKit($directory: String!) {
        ///  deleteLocalKit(directory: $directory) {
        ///    error
        ///  }
        ///}.
        /// </summary>
        internal static string deleteLocalKit {
            get {
                return ResourceManager.GetString("deleteLocalKit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to query LoadLocalKit($directory: String!) {
        ///  loadLocalKit(directory: $directory) {
        ///    kit {
        ///      name
        ///      explanation
        ///      icon
        ///      url
        ///      types {
        ///        name
        ///        explanation
        ///        icon
        ///        representations {
        ///          url
        ///          lod
        ///          tags
        ///        }
        ///        ports {
        ///          plane {
        ///            origin {
        ///              x
        ///              y
        ///              z
        ///            }
        ///            xAxis {
        ///              x
        ///              y
        ///              z
        ///            }
        ///            yAxis {
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string loadLocalKit {
            get {
                return ResourceManager.GetString("loadLocalKit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mutation RemoveFormationFromLocalKit($directory: String!, $formation: FormationIdInput!) {
        ///  removeFormationFromLocalKit(directory: $directory, formationId: $formation) {
        ///    error {
        ///      code
        ///      message
        ///    }
        ///  }
        ///}.
        /// </summary>
        internal static string removeFormationFromLocalKit {
            get {
                return ResourceManager.GetString("removeFormationFromLocalKit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mutation RemoveTypeFromLocalKit($directory: String!, $type: TypeIdInput!) {
        ///  removeTypeFromLocalKit(directory: $directory, typeId: $type) {
        ///    error {
        ///      code
        ///      message
        ///    }
        ///  }
        ///}.
        /// </summary>
        internal static string removeTypeFromLocalKit {
            get {
                return ResourceManager.GetString("removeTypeFromLocalKit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type Query {
        ///  loadLocalKit(directory: String!): LoadLocalKitResponse
        ///}
        ///
        ///type LoadLocalKitResponse {
        ///  kit: Kit
        ///  error: LoadLocalKitError
        ///}
        ///
        ///type Kit implements Artifact {
        ///  name: String!
        ///  explanation: String
        ///  icon: String
        ///  createdAt: DateTime!
        ///  modifiedAt: DateTime!
        ///  url: String
        ///  types: [Type!]!
        ///  formations: [Formation!]!
        ///  parent: Artifact
        ///  children: [Artifact!]!
        ///  references: [Artifact!]!
        ///  referencedBy: [Artifact!]!
        ///  relatedTo: [Artifact!]!
        ///}
        ///
        ///interface Artifact {
        ///  name: String!
        ///  explanation [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string schema {
            get {
                return ResourceManager.GetString("schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mutation UpdateLocalKitMetadata($directory: String!, $kit: KitMetadataInput!) {
        ///  updateLocalKitMetadata(directory: $directory, kitMetadataInput: $kit) {
        ///    kit {
        ///      name
        ///      explanation
        ///      icon
        ///      url
        ///    }
        ///    error {
        ///      code
        ///      message
        ///    }
        ///  }
        ///}.
        /// </summary>
        internal static string updateLocalKitMetadata {
            get {
                return ResourceManager.GetString("updateLocalKitMetadata", resourceCulture);
            }
        }
    }
}
