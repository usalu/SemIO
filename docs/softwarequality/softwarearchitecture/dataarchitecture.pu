@startuml "data architecture"
skinparam linetype ortho

interface Artifact {
    *name : string
    explanation : string
    symbol : string
    ..
    *created : datetime
    *modified : datetime
}

entity Kit {
    *id : int <<generated>> 
    ..
    url : string
}

entity Type {
    *id : int <<generated>>
    ..
    kit_id : int <<FK>>
}

entity Representation {
    *id : int <<generated>>
    ..
    platform: string
    type_id : int <<FK>>
}

entity Port {
    *id : int <<generated>>
    ..
    type_id : int <<FK>>
}

abstract Quality {
    *id : int <<generated>>
    ..
    *name : string
    *kind : string
    *units : String
    ..
    port_id : int <<FK>>
    --
    value() : Any
    equals(property) : boolean
}
note left of Quality
    Single table inheritance with kind as discriminator.
    Every Implementation of Quality must have a way to convert units between each other.
end note


entity CountQuality {
    *count : integer
}

entity LengthQuality {
    *length : number
}

entity AreaQuality {
    *area : number
}

entity VolumeQuality {
    *volume : number
}

entity WeightQuality {
    *weight : number
}

entity TimeQuality {
    *time : time
}

entity CostQuality {
    *cost : number
}

entity ColorQuality {
    *color : string
}

abstract Location {
    *context : string
    *specifier : string
    ..
    port_id : int <<FK>>
}

entity Piece{
    *id : int <<generated>>
    ..
    type_id : int <<FK>>
    ..
    formation_id : int <<FK>>
}

entity Attraction {
    *id : int <<generated>>
    ..
    attracting_piece_id : int <<FK>>
    attracting_piece_type_port_id : int <<FK>>
    attracted_piece_id : int <<FK>>
    attracted_piece_type_port_id : int <<FK>>
    ..
    formation_id : int <<FK>>
}

entity Formation {
    *id : int <<generated>>
    ..
    kit_id : int <<FK>>
}


Kit ||--o{ Type
Kit ||--o{ Formation
Representation }o--|| Type
Type ||--o{ Port
Type ||--o{ Quality
Formation ||--o{ Piece
Formation ||--o{ Attraction
Port ||--o{  Location
Type <-- Piece
Piece <-- Attraction
Port <-- Attraction

Quality <|-- LengthQuality
Quality <|-- CountQuality
Quality <|-- AreaQuality
Quality <|-- VolumeQuality
Quality <|-- WeightQuality
Quality <|-- TimeQuality
Quality <|-- CostQuality
Quality <|-- ColorQuality

Artifact <|-- Kit
Artifact <|-- Type
Artifact <|-- Formation


@enduml