@startuml "data architecture"
skinparam linetype ortho

interface Artifact {
    *name : string
    explanation : string
    symbol : string
    ..
    *created : datetime
    *modified : datetime
}

entity Kit {
    *id : int <<generated>> 
    ..
    url : string
}

entity Type {
    *id : int <<generated>>
    ..
    kit_id : int <<FK>>
}

entity Representation {
    *id : int <<generated>>
    ..
    format: string
    lod: string
    blob : blob
    ..
    type_id : int <<FK>>
}

entity Tag {
    *value : string <<PK>>
    ..
    representation_id : int <<PK,FK>>
}

entity Port {
    *id : int <<generated>>
    ..
    type_id : int <<FK>>
}

abstract Quality {
    *name : string <<PK>>
    *value : string
    unit : String
    ..
    type_id : int <<PK,FK>>
}


abstract Specifier {
    *context : string <<PK>>
    *group : string
    ..
    port_id : int <<PK,FK>>
}

entity Piece{
    *id : int <<generated>>
    ..
    type_id : int <<FK>>
    ..
    formation_id : int <<FK>>
}

entity Attraction {
    attracting_piece_id : int <<PK,FK>>
    attracting_piece_type_port_id : int <<FK>>
    attracted_piece_id : int <<PK,FK>>
    attracted_piece_type_port_id : int <<FK>>
    ..
    formation_id : int <<PK,FK>>
}

entity Formation {
    *id : int <<generated>>
    ..
    kit_id : int <<FK>>
}


Kit ||--|{ Type
Kit ||--o{ Formation
Tag }o--|| Representation
Representation }|--|| Type
Type ||--|{ Port
Type ||--o{ Quality
Formation ||--o{ Piece
Formation ||--o{ Attraction
Port ||--o{  Specifier
Type <-- Piece
Piece <-- Attraction
Port <-- Attraction

Artifact <|-- Kit
Artifact <|-- Type
Artifact <|-- Formation
Artifact <|-- Representation


@enduml